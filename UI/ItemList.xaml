<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:mock="clr-namespace:Trinity.Settings.Mock"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Trinity.UI.UIComponents.Converters"
             xmlns:itemlist="clr-namespace:Trinity.Settings.ItemList"
             xmlns:behaviors="clr-namespace:Trinity.UI.UIComponents.Behaviors"
             xmlns:controls="clr-namespace:Trinity.UI.UIComponents.Controls"
             xmlns:markup="clr-namespace:Trinity.UI.UIComponents.MarkupExtensions"
             mc:Ignorable="d" Foreground="{DynamicResource TextBrush}" Background="#434343" Padding="0,0,0,0"
             d:DesignHeight="800" d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Template.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible"
                                                  FalseValue="Collapsed" />
            <converters:EnumVisibilityConverter x:Key="EnumVisibilityConverter" />
            <converters:EnumVisibilityConverter x:Key="EnumTrueToCollapsedConverter" Reverse="True" />
            <converters:UriToCachedImageConverter x:Key="UrlToCachedImageConverter" />

            <!--<Style TargetType="{x:Type TabItem}" />-->

            <mock:MockData x:Key="DesignViewModel" />

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ItemPropertyProvider">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="itemlist:ItemProperty" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style x:Key="StatusLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <Style x:Key="GroupHeaderPrimaryLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="Margin" Value="0" />
            </Style>

            <Style x:Key="TitleLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Height" Value="Auto" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSetItem}" Value="True">
                        <Setter Property="Foreground" Value="#8bd442" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsSetItem}" Value="False" />
                            <Condition Binding="{Binding Path=Quality}" Value="Legendary" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="#bf642f" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UnselectedTitleLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Foreground" Value="#cccccc" />
            </Style>

            <Style x:Key="SubtleInformationStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Padding" Value="0,2,2,0" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Foreground" Value="#cccccc" />
            </Style>

            <Style x:Key="TextBlockSubtleInformationStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Padding" Value="0,2,2,0" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Foreground" Value="#cccccc" />
            </Style>

            <Style x:Key="QualityLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Height" Value="Auto" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSetItem}" Value="True">
                        <Setter Property="Foreground" Value="#8bd442" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsSetItem}" Value="False" />
                            <Condition Binding="{Binding Path=Quality}" Value="Legendary" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="#bf642f" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SelfAdjustingHeightImageStyle" TargetType="{x:Type Image}">
                <Setter Property="Width" Value="64" />
                <Setter Property="Height" Value="64" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BaseType}" Value="Weapon">
                        <Setter Property="Height" Value="128" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BaseType}" Value="Armor">
                        <Setter Property="Height" Value="128" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <themes:ListBoxChrome x:Name="Bd"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Background="{TemplateBinding Background}"
                                                  RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                  RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                                  SnapsToDevicePixels="False">
                                <ScrollViewer VerticalScrollBarVisibility="Visible"
                                              Padding="{TemplateBinding Padding}" Uid="ScrollViewer_11">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    Uid="ItemsPresenter_6" />
                                </ScrollViewer>
                            </themes:ListBoxChrome>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true" />
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <DataTemplate x:Key="SelectedRowTemplate">
                <Border Margin="0" Background="#333333" Padding="5,0,5,2">
                    <Border Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" MinWidth="15" />
                                <ColumnDefinition MinWidth="54" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical">
                                <CheckBox x:Name="SelectedCheckBox" IsChecked="{Binding Path=IsSelected}"
                                          Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </StackPanel>
                            <Border Grid.Column="1" Background="#333333" CornerRadius="3" Padding="10">
                                <StackPanel Orientation="Vertical" Margin="0,0,1,1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Border Grid.RowSpan="3" CornerRadius="4" Padding="5" BorderThickness="1"
                                                BorderBrush="#b07b38">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0" />
                                                    <GradientStop Color="#FF331F0D" Offset="1" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Image Style="{StaticResource SelfAdjustingHeightImageStyle}" Height="128"
                                                   Source="{Binding IconUrl, Mode=OneWay, Converter={StaticResource UrlToCachedImageConverter}, IsAsync=true}" />
                                        </Border>
                                        <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,0,0,10">
                                            <DockPanel>
                                                <Label DockPanel.Dock="Left" Style="{StaticResource TitleLabelStyle}"
                                                       Content="{Binding Name}" />
                                                <Label DockPanel.Dock="Right"
                                                       Style="{StaticResource SubtleInformationStyle}"
                                                       HorizontalAlignment="Right" Content="{Binding Id}" />
                                            </DockPanel>
                                            <Label Style="{StaticResource QualityLabelStyle}"
                                                   Content="{Binding QualityTypeLabel}" />
                                            <WrapPanel
                                                Visibility="{Binding LegendaryAffix, Converter={StaticResource EmptyStringToVisibilityConverter}, Mode=OneWay}">
                                                <TextBlock ToolTip="{Binding LegendaryAffix}"
                                                           Style="{StaticResource TextBlockSubtleInformationStyle}"
                                                           Text="{Binding LegendaryAffix}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </WrapPanel>
                                        </StackPanel>
                                        <Border Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"
                                                behaviors:CancelMouseBubbling.Active="True" Background="#55171717"
                                                BorderBrush="#55666666" BorderThickness="0,0,1,1" Margin="0,5,0,0">
                                            <Border Padding="10,5,10,10" Background="Transparent"
                                                    BorderBrush="#FF222222" BorderThickness="1,1,0,0">
                                                <StackPanel>
                                                    <StackPanel>
                                                        <Grid Background="Transparent">
                                                            <TextBlock TextWrapping="Wrap" Text="必须具备的属性:"
                                                                       Foreground="White" FontWeight="Regular"
                                                                       HorizontalAlignment="Left">
                                                                <Run Text="  (" FontWeight="Normal" Foreground="Gray" />
                                                                <Run
                                                                    Text="{Binding Mode=OneWay, Path=RequiredRules.Count }"
                                                                    FontWeight="Normal" Foreground="Gray" />
                                                                <Run Text=") " FontWeight="Normal" Foreground="Gray" />
                                                            </TextBlock>
                                                            <ComboBox
                                                                Background="Transparent"
                                                                HorizontalAlignment="Right"
                                                                Name="AddRuleComboBox"
                                                                FontWeight="Normal"
                                                                behaviors:ComboAlwaysFireSelection.Active="True"
                                                                behaviors:SelectionChangedBehaviour.Command="{Binding AddRequiredRuleCommand}"
                                                                ItemsSource="{Binding ItemProperties}"
                                                                Width="Auto"
                                                                Height="23" IsSynchronizedWithCurrentItem="False"
                                                                Template="{DynamicResource ActionsComboBoxControlTemplate}"
                                                                Tag="增加"/>
                                                        </Grid>
                                                        <WrapPanel x:Name="rulesContentContainer"
                                                                   Background="Transparent" Width="Auto">
                                                            <ItemsControl
                                                                Width="{Binding ActualWidth, ElementName=rulesContentContainer}"
                                                                HorizontalContentAlignment="Stretch"
                                                                HorizontalAlignment="Stretch"
                                                                ItemsSource="{Binding RequiredRules}"
                                                                ItemContainerStyle="{DynamicResource ItemsControlSelector}" />
                                                        </WrapPanel>
                                                    </StackPanel>
                                                    <StackPanel Margin="0,5,0,0">
                                                        <Grid Background="Transparent">
                                                            <WrapPanel>
                                                                <TextBlock TextWrapping="Wrap" Text="和以下属性其中"
                                                                           Margin="0,2,0,0" Foreground="White"
                                                                           FontWeight="Regular"
                                                                           HorizontalAlignment="Left" />
                                                                <ComboBox
                                                                    Background="Transparent"
                                                                    HorizontalAlignment="Left"
                                                                    Name="OptionalCount"
                                                                    FontWeight="Normal"
                                                                    MaxHeight="20"
                                                                    Foreground="White"
                                                                    Width="Auto" Height="23"
                                                                    ItemsSource="{Binding OpCountNumbers}"
                                                                    SelectedValue="{Binding Path=Ops, Mode=TwoWay}"
                                                                    Tag="增加"

                                                                    ToolTip="The number of optional rules that must be true"/>
                                                                <TextBlock TextWrapping="Wrap" Text="种:"
                                                                           Margin="0,2,0,0" Foreground="White"
                                                                           FontWeight="Regular"
                                                                           HorizontalAlignment="Left">
                                                                    <Run Text="  (" FontWeight="Normal"
                                                                         Foreground="Gray" />
                                                                    <Run
                                                                        Text="{Binding Mode=OneWay, Path=OptionalRules.Count }"
                                                                        FontWeight="Normal" Foreground="Gray" />
                                                                    <Run Text=") " FontWeight="Normal"
                                                                         Foreground="Gray" />
                                                                </TextBlock>
                                                            </WrapPanel>
                                                            <ComboBox
                                                                Background="Transparent"
                                                                HorizontalAlignment="Right"
                                                                Name="OptionalAddRuleComboBox"
                                                                FontWeight="Normal"
                                                                behaviors:ComboAlwaysFireSelection.Active="True"
                                                                behaviors:SelectionChangedBehaviour.Command="{Binding AddOptionalRuleCommand}"
                                                                ItemsSource="{Binding ItemProperties}"
                                                                Width="Auto" Height="23"
                                                                IsSynchronizedWithCurrentItem="False"
                                                                Template="{DynamicResource ActionsComboBoxControlTemplate}"
                                                                Tag="增加"/>
                                                        </Grid>
                                                        <WrapPanel x:Name="optionalRulesContentContainer"
                                                                   Background="Transparent" Width="Auto">
                                                            <ItemsControl
                                                                Width="{Binding ActualWidth, ElementName=rulesContentContainer}"
                                                                HorizontalContentAlignment="Stretch"
                                                                HorizontalAlignment="Stretch"
                                                                ItemsSource="{Binding OptionalRules}"
                                                                ItemContainerStyle="{DynamicResource ItemsControlSelector}" />
                                                        </WrapPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </Border>
            </DataTemplate>

            <Style x:Key="ItemsControlSelector" TargetType="{x:Type ContentPresenter}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="ContentTemplate" Value="{DynamicResource DefaultFormTemplate}" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="远古">
                        <Setter Property="ContentTemplate" Value="{DynamicResource CheckboxFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="主要属性">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="暴击几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="暴击伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="技能伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource DropdownSliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="基础最大伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="攻击速度">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="百分比伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="减少精英怪造成的伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="对精英怪伤害提高">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="体能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="镶孔">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="所有抗性">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="冷却时间缩短">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="减少耗能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="元素伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource DropdownSliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="火焰技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="闪电技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="神圣技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="冰霜技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="物理技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="奥术技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="毒性技能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="范围伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <!-- New -->
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="暴击恢复奥能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="护甲">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="格挡几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="冷却时间缩短">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="减少精英怪造成的伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="憎恨再生">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="百分比生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="消耗怒气恢复生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="消耗内力恢复生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="消耗愤怒值恢复生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="击中回复生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="每秒恢复生命">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="法力恢复">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="移动速度">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="愤怒值再生">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="内力再生">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="奥能上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="戒律上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="怒气上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="法力上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="内力上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="愤怒上限">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="击中产生致盲效果几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="击中产生冰冻效果几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="击中产生定身效果几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="击中产生昏迷效果几率">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="攻击受到伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="荆棘伤害">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="威能">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormDecimalTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="Attribute">
                        <Setter Property="ContentTemplate" Value="{DynamicResource AttributeFormTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="CheckboxFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <WrapPanel HorizontalAlignment="Stretch" Width="Auto">
                            <CheckBox x:Name="CheckBoxFieldCheckbox" IsChecked="{Binding Path=Value}" Margin="0"
                                      HorizontalAlignment="Left" VerticalAlignment="Center" />
                            <CheckBox Style="{DynamicResource TextBlockCheckBox}" FontWeight="Regular"
                                      IsChecked="{Binding IsChecked, ElementName=CheckBoxFieldCheckbox}"
                                      Content="{Binding Name}" Margin="0,0,0,0" />

                        </WrapPanel>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="AttributeFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Width="Auto" HorizontalAlignment="Stretch" Margin="0,0,25,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="2*" MinWidth="25" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" MinWidth="25" MaxWidth="60" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="1*" MinWidth="25" MaxWidth="60" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0">Key</Label>
                            <TextBox Grid.Column="1" Text="{Binding AttributeKey}" VerticalContentAlignment="Center" />
                            <Label Grid.Column="2">Mod#</Label>
                            <TextBox Grid.Column="3" Text="{Binding AttributeModifier}"
                                     VerticalContentAlignment="Center" />
                            <Label Grid.Column="4">Val</Label>
                            <TextBox Grid.Column="5" Text="{Binding AttributeValue}" VerticalContentAlignment="Center" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="SliderFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Margin="4,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="37*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Foreground="White" VerticalContentAlignment="Center"
                                   Style="{StaticResource UnselectedTitleLabelStyle}" Content="{Binding Name}" />

                            <Slider Grid.Row="0" Grid.Column="1" Template="{DynamicResource SliderEditable}"
                                    Interval="25"
                                    Maximum="{Binding Max, Mode=OneWay}"
                                    Minimum="{Binding Min, Mode=OneWay}"
                                    SmallChange="{Binding Step, Mode=OneWay}"
                                    TickFrequency="{Binding Step, Mode=OneWay}"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Value="{Binding Value}"
                                    HorizontalAlignment="Stretch" Margin="5,0,25,0" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="SliderFormDecimalTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Margin="4,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="37*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Foreground="White" VerticalContentAlignment="Center"
                                   Style="{StaticResource UnselectedTitleLabelStyle}" Content="{Binding Name}" />

                            <Slider Grid.Row="0" Grid.Column="1" Template="{DynamicResource SliderEditable}"
                                    Maximum="{Binding Max, Mode=OneWay}"
                                    Minimum="{Binding Min, Mode=OneWay}"
                                    SmallChange="0.1"
                                    TickFrequency="0.5"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Value="{Binding Value}"
                                    HorizontalAlignment="Stretch" Margin="5,0,25,0" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="DropdownSliderFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Margin="4,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27*" />
                                <ColumnDefinition Width="49*" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" FontWeight="Normal"
                                      ItemsSource="{Binding Variants}"
                                      SelectedValue="{Binding Variant, Mode=TwoWay}"
                                      SelectedValuePath="Id"
                                      DisplayMemberPath="Name"
                                      Margin="0,0,0,0" />
                            <Slider Grid.Row="0" Grid.Column="1" Template="{DynamicResource SliderEditable}"
                                    Interval="25"
                                    Maximum="{Binding Max, Mode=OneWay}"
                                    Minimum="{Binding Min, Mode=OneWay}"
                                    SmallChange="{Binding Step, Mode=OneWay}"
                                    TickFrequency="{Binding Step, Mode=OneWay}"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Value="{Binding Value}"
                                    HorizontalAlignment="Stretch" Margin="5,0,25,0" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="DefaultFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2"
                        BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <WrapPanel HorizontalAlignment="Stretch" Width="Auto">
                            <Label Foreground="White" Style="{StaticResource UnselectedTitleLabelStyle}"
                                   Content="{Binding Name}" />
                        </WrapPanel>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0"
                                Background="Transparent"
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="NormalRowTemplate">
                <StackPanel Orientation="Horizontal" Margin="5,2,5,2">
                    <CheckBox x:Name="SelectedCheckBox" IsChecked="{Binding Path=IsSelected}" Margin="0"
                              HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Label Style="{StaticResource UnselectedTitleLabelStyle}" Margin="6,0,0,0" Content="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="#333333" />
                <Setter Property="Foreground" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SelectedRowTemplate}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                        <Setter Property="ContentTemplate" Value="{DynamicResource NormalRowTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <controls:ModalContentPresenter x:Name="modalPresenter" IsModal="{Binding ItemList.IsModalVisible}"
                                    OpenCommand="{Binding ItemList.LoadModalCommand}">

        <DockPanel LastChildFill="True" VerticalAlignment="Stretch" Margin="10,0,10,10">
            <StackPanel DockPanel.Dock="Top" Background="DarkRed" Margin="0,10,0,0"
                        Visibility="{Binding Items.LegendaryMode, Converter={StaticResource EnumTrueToCollapsedConverter}, ConverterParameter=ItemList, Mode=TwoWay}">
                <StackPanel Margin="10">
                    <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Background="Transparent"
                               Foreground="White" Margin="0,0,10,0">
                        <Run>传奇装备的处理目前设置为: </Run>
                        <Run Text="{Binding Items.LegendaryMode, FallbackValue=[LegendaryMode]}"/>
                    </TextBlock>
                    <Button Margin="0,5,0,0" VerticalAlignment="Center" Style="{DynamicResource LinkButton}"
                            Content="使用装备列表" Command="{Binding ItemList.EnableItemListCommand}"/>
                </StackPanel>
            </StackPanel>
            <Grid>
                <DockPanel>
                    <TabControl Margin="0,10,0,0" Padding="0,10,5,2" Background="Transparent"
                                SelectedIndex="{Binding ItemList.SelectedTabIndex}">

                        <!-- List of Legendary Items -->
                        <TabItem Header="传奇装备" Style="{DynamicResource TertiaryTabItem}">
                            <DockPanel Background="#333333"> 
                                <Border DockPanel.Dock="Top" Padding="0,0,0,0" BorderThickness="0,0,0,1" BorderBrush="#55555555"> 
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" DockPanel.Dock="Top" Margin="0,0,0,0" Orientation="Horizontal"
                                                    Background="Transparent"
                                                    Height="38" VerticalAlignment="Center">
                                        
                                            <Label Style="{StaticResource StatusLabelStyle}"
                                                   VerticalContentAlignment="Center" Margin="5,0,0,0"
                                                   Content="搜索:"/>
                                            <TextBox Width="140" Height="22" BorderBrush="DarkSlateGray"
                                                     Text="{Binding ItemList.FilterText, UpdateSourceTrigger=PropertyChanged}"
                                                     Margin="0,8"
                                                     ToolTip="Search by Item Name or Id" />
                                            <Button Content=" X " Height="21" Width="25" Margin="-27,-1,0,0"
                                                    Background="Transparent"
                                                    Command="{Binding ItemList.ResetFilterCommand}"
                                                    BorderBrush="Transparent" FontWeight="Heavy"
                                                    BorderThickness="1"
                                                    Visibility="{Binding ItemList.IsFiltered, Converter={StaticResource BoolToVisibilityConverter}}" />

                                            <Label Style="{StaticResource StatusLabelStyle}"
                                                   VerticalContentAlignment="Center" Margin="5,0,0,0"
                                                   Content="装备类型:"/>
                                            <ComboBox Tag="" SelectedValuePath="Tag"
                                                      SelectedValue="{Binding ItemList.Grouping}"
                                                      x:Name="GroupingDropdown" MaxHeight="25" Padding="0,0,15,0">
                                                <ComboBoxItem Content="不分类型" Tag="None" Foreground="White"
                                                                  Background="Black"/>
                                                <ComboBoxItem Content="装备特效" Tag="IsLegendaryAffixed"
                                                                  Foreground="White" Background="Black"/>
                                                <ComboBoxItem Content="装备种类" Tag="BaseType" Foreground="White"
                                                                  Background="Black"/>
                                                <ComboBoxItem Content="装备部位" Tag="ItemType" Foreground="White"
                                                                  Background="Black"/>
                                                <ComboBoxItem Content="职业套装" Tag="SetName" Foreground="White"
                                                                  Background="Black"/>
                                                <ComboBoxItem Content="职业限定" Tag="ClassRestriction" Foreground="White"
                                                                  Background="Black"/>
                                                <ComboBoxItem Content="未勾选的" Tag="IsSelected" Foreground="White"
                                                                  Background="Black"/>
                                            </ComboBox>
                                      
                                        </StackPanel>
                                        <ComboBox Grid.Column="1"  Background="Transparent" HorizontalAlignment="Right" 
                                                      FontWeight="Normal"
                                                      behaviors:ComboAlwaysFireSelection.Active="False"
                                                      behaviors:SelectionChangedBehaviour.Command="{Binding ItemList.AdvancedOptionCommand}"
                                                      Width="Auto" Height="23" IsSynchronizedWithCurrentItem="False"
                                                      Template="{DynamicResource ActionsComboBoxControlTemplate}"
                                                      Tag="更多选项" Margin="0,2,8,2">
                                            <ComboBoxItem Content="全不选" Tag="SelectNoneCommand"
                                                              Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="全选" Tag="SelectAllCommand"
                                                              Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="勾上2.4的装备" Tag="Add24ItemsCommand"
                                                              Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="勾上职业套装" Tag="AddAllSetsCommand"
                                                              Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="勾上有特效的"
                                                              Tag="AddAllLegendaryAffixCommand" Foreground="White"
                                                              Background="Black"/>
                                            <ComboBoxItem Content="清除所有属性" Tag="ClearRulesCommand"
                                                              Foreground="White" Background="Black"/>
                                        </ComboBox>
                                    </Grid>
                                </Border>
                                <ListView Padding="8,5,8,0" DockPanel.Dock="Top"
                                          d:DataContext="{Binding Source={StaticResource DesignViewModel}}"
                                          SelectionMode="Multiple"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                                          VirtualizingPanel.IsVirtualizing="True"
                                          VirtualizingPanel.VirtualizationMode="Standard"
                                          VirtualizingPanel.IsVirtualizingWhenGrouping="False"
                                          VirtualizingPanel.CacheLengthUnit="Page"
                                          VirtualizingPanel.CacheLength="2"
                                          ScrollViewer.IsDeferredScrollingEnabled="False"
                                          ItemContainerStyle="{DynamicResource ListViewItemStyle}"
                                          Background="#333333"
                                          ItemsSource="{Binding ItemList.Collection.View}"
                                          VerticalContentAlignment="Stretch"
                                          Style="{DynamicResource ListViewStyle1}">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Expander FontWeight="Bold" Foreground="LightSkyBlue" Header="{Binding Name}">
                                                                    <!--<Expander FontWeight="Bold" Foreground="LightSkyBlue" Header="{Binding Name}" IsExpanded="{markup:Value false, DesignValue=true}">-->
                                                                    <Expander.HeaderTemplate>
                                                                        <DataTemplate>
                                                                            <!--<StackPanel Orientation="Horizontal">-->
                                                                            <Label
                                                                                Style="{StaticResource GroupHeaderPrimaryLabelStyle}"
                                                                                Content="{Binding}" />
                                                                            <!--</StackPanel>-->
                                                                        </DataTemplate>
                                                                    </Expander.HeaderTemplate>
                                                                    <ItemsPresenter />
                                                                </Expander>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GroupStyle.ContainerStyle>
                                        </GroupStyle>
                                    </ListView.GroupStyle>
                                </ListView>
                            </DockPanel>
                        </TabItem>

                        <!-- List of Item Slots -->
                        <TabItem Header="装备类型" Style="{DynamicResource TertiaryTabItem}">
                            <DockPanel Background="#333333">
                                <Border DockPanel.Dock="Top">
                                    <Grid>
                                        <Label Margin="4,0,0,0">勾选你想要保留或者存仓的装备类型.</Label>
                                        <ComboBox Background="Transparent" HorizontalAlignment="Right"
                                                  FontWeight="Normal"
                                                  behaviors:ComboAlwaysFireSelection.Active="False"
                                                  behaviors:SelectionChangedBehaviour.Command="{Binding ItemList.AdvancedOptionCommand}"
                                                  Width="Auto" Height="23" IsSynchronizedWithCurrentItem="False"
                                                  Template="{DynamicResource ActionsComboBoxControlTemplate}"
                                                  Tag="更多选项">

                                            <ComboBoxItem Content="全不选" Tag="SelectNoneCommand"
                                                          Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="全选" Tag="SelectAllCommand"
                                                          Foreground="White" Background="Black"/>
                                            <ComboBoxItem Content="清除所有属性" Tag="ClearRulesCommand"
                                                          Foreground="White" Background="Black"/>
                                        </ComboBox>
                                    </Grid>
                                </Border>

                                <!-- VirtualizingPanel.IsVirtualizing="True" causes the UI to not update properly when source is updated with IsSelected=false outside of the current page of items.
                                     then for some unknown but rediculous reason, the UI then tries to write its dirty state back onto the source. -->

                                <ListView Padding="5,5,0,0" DockPanel.Dock="Top"
                                          SelectionMode="Multiple"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible"


                                          VirtualizingPanel.IsVirtualizing="False"
                                          ScrollViewer.IsDeferredScrollingEnabled="False"
                                          ItemContainerStyle="{DynamicResource ListViewItemStyle}"
                                          Background="#333333"
                                          ItemsSource="{Binding ItemList.ItemTypes.View}"
                                          VerticalContentAlignment="Stretch"
                                          Style="{DynamicResource ListViewStyle1}" />
                            </DockPanel>
                        </TabItem>
                        

                            <TabItem Header="高级" Style="{DynamicResource TertiaryTabItem}">
                            <Border Padding="10" Background="#333333">
                                <StackPanel>
                                    <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                              Background="#474747">
                                        <GroupBox.Header>
                                            根据当前人物勾选装备列表页的装备
                                        </GroupBox.Header>
                                        <StackPanel Margin="0,10,0,0">
                                            <UniformGrid Rows="1">
                                                <Button Height="25"
                                                        Command="{Binding ItemList.LoadEquippedItemsCommand}">
                                                    勾选已装备的传奇
                                                </Button>
                                                <Button Height="25"
                                                        Command="{Binding ItemList.LoadStashedItemsCommand}">
                                                    勾选仓库里的传奇
                                                </Button>
                                            </UniformGrid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                              Background="#474747">
                                        <GroupBox.Header>
                                            辅助
                                        </GroupBox.Header>
                                        <StackPanel>

                                            <CheckBox
                                                ToolTip="Avoids you having to add an ancient rule to every selected item"
                                                Content="贩卖或拆解非远古装备"
                                                IsChecked="{Binding ItemList.AlwaysTrashNonAncients}"/>
                                            <CheckBox
                                                ToolTip="Allows you to keep itemlist selections AND ancients"
                                                Content="存仓远古装备和装备列表的选择"
                                                IsChecked="{Binding ItemList.AlwaysStashAncients}"/>
                                          <CheckBox
                                              Content="始终保留太古装备"
                                              IsChecked="{Binding ItemList.AlwaysStashPrimalAncients}"/>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                              Background="#474747">
                                        <GroupBox.Header>
                                            自动提升属性数值
                                        </GroupBox.Header>
                                        <StackPanel>
                                            <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">如果拾取的新装备对比仓库的同一装备属性值较高,则自动提升传奇装备页中设定的属性数值来防止较差的装备存仓.</TextBlock>
                                            <CheckBox
                                                ToolTip="Rule sliders will automatically be increased as you find more powerful items."
                                                Content="开启自动提升"
                                                IsChecked="{Binding ItemList.UpgradeRules}"/>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </Border>
                        </TabItem>

                        <!--VirtualizingPanel.IsVirtualizing="True"
                                  VirtualizingPanel.VirtualizationMode="Standard"
                                  VirtualizingPanel.IsVirtualizingWhenGrouping="False"
                                  VirtualizingPanel.CacheLengthUnit="Page"
                                  VirtualizingPanel.CacheLength="2"-->
                    </TabControl>
                </DockPanel>
                
                <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,10,0,0" Height="25">
                    <Button
                                                Command="{Binding Source={x:Static controls:ModalContentCommands.ShowModalContent}}"
                                                CommandParameter="Export" Width="Auto" Padding="7,2" Margin="10,0,5,0">
                        导出
                    </Button>
                    <Button
                                                Command="{Binding Source={x:Static controls:ModalContentCommands.ShowModalContent}}"
                                                CommandParameter="Import" Width="Auto" Padding="7,2" Margin="0,0,5,0">
                        导入
                    </Button>
                </WrapPanel>

                <Border d:IsHidden="true" Background="#99222222"
                        Visibility="{Binding Items.LegendaryMode, Converter={StaticResource EnumTrueToCollapsedConverter}, ConverterParameter=ItemList, Mode=TwoWay}" />
            </Grid>

        </DockPanel>

        <!-- Import/Export Modal -->
        <controls:ModalContentPresenter.ModalContent>
            <Grid Margin="25,25,25,25">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>

                <!-- Import -->
                <TextBox Grid.Row="0"
                         Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Import}"
                         Text="{Binding ItemList.ExportCode, FallbackValue='Export Code Error'}" MinHeight="200"
                         Height="Auto" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" IsReadOnly="False" />

                <UniformGrid Grid.Row="1"
                             Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Import}">
                    <Button Content="导入" Margin="0,0,0,-22.5" VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center" Width="Auto" Height="Auto"
                            Command="{Binding ItemList.ImportCommand}"/>
                    <Button Content="关闭" Margin="0,0,0,-22.5" VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center" Width="Auto" Height="Auto"
                            Command="{Binding Source={x:Static controls:ModalContentCommands.HideModalContent}}" />
                </UniformGrid>

                <!-- Export -->
                <TextBox Grid.Row="0"
                         Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Export}"
                         Text="{Binding ItemList.ExportCode, FallbackValue='Export Code Error'}" MinHeight="200"
                         Height="Auto" TextWrapping="Wrap" behaviors:SelectTextOnFocus.Active="True"
                         VerticalScrollBarVisibility="Auto" IsReadOnly="True" />

                <StackPanel Grid.Row="1"
                            Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Export}">
                    <Button Content="关闭" Margin="0" Padding="10" Height="45"
                            Command="{Binding Source={x:Static controls:ModalContentCommands.HideModalContent}}"/>
                </StackPanel>

            </Grid>
        </controls:ModalContentPresenter.ModalContent>
    </controls:ModalContentPresenter>
</UserControl>