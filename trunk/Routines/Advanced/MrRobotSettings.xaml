<UserControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:Trinity.UI.UIComponents.Converters"
    xmlns:mock="clr-namespace:Trinity.Settings.Mock"
    xmlns:objects="clr-namespace:Trinity.Framework.Objects"
    xmlns:markup="clr-namespace:Trinity.UI.UIComponents.MarkupExtensions"
    xmlns:ui="clr-namespace:Trinity.UI.UIComponents"    

    mc:Ignorable="d" Background="#434343" d:DesignHeight="1820" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../UI/Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <converters:PercentConverter x:Key="PercentConverter" />
            <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
            <converters:EnumVisibilityConverter x:Key="HiddenWhenEnumTrueConverter" Reverse="True" />
            <converters:EnumVisibilityConverter x:Key="VisibleWhenEnumTrueConverter"  />
            <converters:UriToCachedImageConverter x:Key="UrlToCachedImageConverter" />
            <converters:DebugDataBindingConverter x:Key="DebugDataBindingConverter" />
            <converters:EnumToBoolConverter x:Key="EnumToBoolConverter" />

            <mock:MockData x:Key="DesignViewModel"/>

            <Style x:Key="SkillIconStyle" TargetType="{x:Type Image}">
                <Setter Property="Width" Value="55" />
                <Setter Property="Height" Value="40" />
            </Style>

            <Style x:Key="OrderListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Focusable" Value="False"/>
            </Style>

            <DataTemplate x:Key="DragAdorner">
                <Border Background="Silver"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="2"
                        Margin="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding}" Margin="0,0,2,0" VerticalAlignment="Center" />
                    </StackPanel>
                </Border>
            </DataTemplate>

            <DataTemplate  x:Key="WeightOrderListBoxItemTemplate">
                <Grid Style="{x:Null}" HorizontalAlignment="Stretch" Margin="0,0,0,0" MinHeight="22" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*" />
                        <!--<ColumnDefinition Width="1*" />-->
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,0">
                        <Path Style="{DynamicResource GrabHandlePath}" Cursor="SizeNS" Margin="0,0,3,0" />
                        <CheckBox IsChecked="{Binding IsEnabled}" Margin="0" Padding="0" >
                            <Label Grid.Column="1" Content="{Binding Name, Mode=OneWay}" />
                        </CheckBox>
                    </StackPanel>
                    <TextBox IsEnabled="{Binding IsEnabled}" Grid.Column="1" BorderBrush="#333" Text="{Binding Formula}" HorizontalAlignment="Stretch" Width="Auto" Margin="0,2,2,2" TextAlignment="Left" IsReadOnly="False" />
                </Grid>
            </DataTemplate>

            <DataTemplate  x:Key="SkillOrderListBoxItemTemplate">
                <Grid Style="{x:Null}" HorizontalAlignment="Stretch" Margin="0,0,0,0" MinHeight="22" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel Grid.Column="0" VerticalAlignment="Center">
                        <Path Style="{DynamicResource GrabHandlePath}" Cursor="SizeNS" />
                        <TextBlock Foreground="White">                           
                            <Run Text="{Binding Order}" />    
                            <Run Text=" - " />
                            <Run Text="{Binding Skill.Name, Mode=OneWay}" />
                        </TextBlock>
                    </WrapPanel>
                    <!--<Grid Grid.Column="1" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Background="Transparent" Margin="0,-2,15,-2"
                              Visibility="{Binding IsLimited, Converter={StaticResource VisibleWhenTrueConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Slider  Grid.Column="0" Template="{DynamicResource SliderEditable}"  
                                        Margin="0,0,0,0"
                                        Interval="500" Maximum="{Binding MaxLimit}" Minimum="0" 
                                        SmallChange="1" LargeChange="5"
                                        TickPlacement="None" IsMoveToPointEnabled="True"                                       
                                        Value="{Binding Limit}" 
                                        HorizontalAlignment="Stretch" />
                            <Label Grid.Column="1">points</Label>
                        </Grid>
                        <CheckBox Grid.Column="1" IsChecked="{Binding IsLimited}"  
                              VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Limit" Margin="0,-1,5,0"/>
                        </CheckBox>
                    </Grid>-->
                </Grid>
            </DataTemplate>            
            
            <DataTemplate x:Key="SkillTemplate" DataType="objects:SkillSettings">
                <GroupBox Header="{Binding Skill.Name}">
                    <DockPanel>

                        <Image DockPanel.Dock="Left" VerticalAlignment="Top" Style="{StaticResource SkillIconStyle}" Margin="-3,5,0,0" HorizontalAlignment="Left"                                
                                   Source="{Binding Skill.IconUrl, Mode=OneWay, Converter={StaticResource UrlToCachedImageConverter}, IsAsync=true}" />
                        
                        <StackPanel Margin="0,4,0,0">
                            
                            <ListBox ItemsSource="{Binding Path=UseMode, Converter={converters:EnumToCollectionConverter}, Mode=OneTime, ConverterParameter='Always,InCombat,OutOfCombat'}"
                                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                              Style="{DynamicResource RadioButtonToolTipListBoxStyle}"                                     
                                              SelectedValuePath="Value"
                                              DisplayMemberPath="Description"
                                              SelectedValue="{Binding Path=UseMode}" />

                            <!--<StackPanel Margin="0,8,0,0" Visibility="{markup:Value {Binding UseMode, ConverterParameter=Always, Converter={StaticResource HiddenWhenEnumTrueConverter}}, DesignValue=Visible}">-->
                            
                            <StackPanel Margin="0,8,0,0">

                                <StackPanel Margin="0,8,0,0">
                                    <TextBlock FontWeight="SemiBold" Foreground="Tan" Margin="0,0,0,4">Use Reasons</TextBlock>
                                    <UniformGrid Columns="2">
                                        <CheckBox ToolTip="Use when there are elites close nearby" 
                                                        IsChecked="{Binding Reasons, ConverterParameter=Elites, Converter={converters:FlagsToBoolConverter}}">Elites nearby</CheckBox>
                                        <CheckBox ToolTip="Use when movement is blocked" 
                                                    IsChecked="{Binding Reasons, ConverterParameter=Trash, Converter={converters:FlagsToBoolConverter}}">Trash nearby</CheckBox>
                                        <CheckBox ToolTip="Use when you are surrounded by enemies" 
                                                        IsChecked="{Binding Reasons, ConverterParameter=Surrounded, Converter={converters:FlagsToBoolConverter}}">Surrounded</CheckBox>
                                        <CheckBox ToolTip="Use when you're low on health" 
                                                        IsChecked="{Binding Reasons, ConverterParameter=HealthEmergency, Converter={converters:FlagsToBoolConverter}}">Health emergency</CheckBox>
                                        <CheckBox ToolTip="Use when avoiding"  
                                                    IsChecked="{Binding Reasons, ConverterParameter=Avoiding, Converter={converters:FlagsToBoolConverter}}">Avoiding</CheckBox>
                                        <CheckBox ToolTip="Use to burn off excess resource" 
                                                    IsChecked="{Binding Reasons, ConverterParameter=DumpResource, Converter={converters:FlagsToBoolConverter}}">Excess Resource</CheckBox>
                                        <CheckBox ToolTip="Use when movement is blocked" 
                                                    IsChecked="{Binding Reasons, ConverterParameter=Blocked, Converter={converters:FlagsToBoolConverter}}">Movement Blocked</CheckBox>
                                    </UniformGrid>
                                </StackPanel>

                                <StackPanel Margin="0,8,0,0">
                                    <TextBlock FontWeight="SemiBold" Foreground="Tan" Margin="0,0,0,4">Parameters</TextBlock>
                                    <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                        Tag="Cluster Size"
                                        ToolTip="Monsters must be in a group of this many before spell can be cast." 
                                        Interval="5" Maximum="30" Minimum="0" 
                                        SmallChange="5" LargeChange="5" 
                                        TickPlacement="None" TickFrequency="5"
                                        Value="{Binding ClusterSize}" 
                                        HorizontalAlignment="Stretch" Margin="2"
                                        />
                                    <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                        Tag="Health Below"
                                        ToolTip="Player health must be at or below this amount to cast spell" 
                                        Interval="5" Maximum="100" Minimum="0" 
                                        SmallChange="5" LargeChange="5"                                             
                                        TickPlacement="None" TickFrequency="5"
                                        Value="{Binding HealthPct, Converter={StaticResource PercentConverter}}" 
                                        HorizontalAlignment="Stretch" Margin="2"
                                        />
                                    <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                        Tag="Primary % Above"
                                        ToolTip="Player resource must be above this to cast spell." 
                                        Interval="5" Maximum="100" Minimum="0" 
                                        SmallChange="5" LargeChange="5" 
                                        TickPlacement="None" TickFrequency="5"
                                        Value="{Binding PrimaryResourcePct}" 
                                        HorizontalAlignment="Stretch" Margin="2"
                                        />
                                    <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                        Tag="Primary % Below"
                                        ToolTip="Player resource must be below this to cast spell." 
                                        Interval="5" Maximum="100" Minimum="0" 
                                        SmallChange="5" LargeChange="5" 
                                        TickPlacement="None" TickFrequency="5"
                                        Value="{Binding PrimaryResourcePctBelow}" 
                                        HorizontalAlignment="Stretch" Margin="2"
                                        />
                                    <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                        Tag="Recast delay"
                                        ToolTip="The time between casts"
                                        Interval="100" Maximum="6000" Minimum="200" 
                                        SmallChange="100" LargeChange="100" 
                                        TickPlacement="None" TickFrequency="250"
                                        Value="{Binding RecastDelayMs}" 
                                        HorizontalAlignment="Stretch" Margin="2"
                                        />
                                </StackPanel>

                            </StackPanel>
                            
                            <StackPanel Margin="0,8,0,0">
                                    <TextBlock FontWeight="SemiBold" Foreground="Tan" Margin="0,0,0,4">Target</TextBlock>
                                    <Grid>
                                        <ComboBox ItemsSource="{Binding Path=Target, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                              SelectedValuePath="Value"
                                              DisplayMemberPath="Description"
                                              SelectedValue="{Binding Path=Target}" />
                                    </Grid>
                               
                            </StackPanel>

                            <StackPanel Margin="0,8,0,0">
                                <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                            Tag="Cast Range"
                                            ToolTip="Monster must be this close before a spell is cast." 
                                            Interval="5" Maximum="100" Minimum="0" 
                                            SmallChange="5" LargeChange="5" 
                                            TickPlacement="None" TickFrequency="5"
                                            Value="{Binding CastRange}" 
                                            HorizontalAlignment="Stretch" Margin="2"
                                            />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </GroupBox>
            </DataTemplate>
                        
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Padding="10">
        <Grid>
            <StackPanel>
                
                <GroupBox>
                    <GroupBox.Header>General</GroupBox.Header>
                    <StackPanel>
                        <Slider Template="{DynamicResource LabelledSliderEditable}" 
                            Tag="Cluster Size"
                            ToolTip="Number of monsters that must be grouped up before fighting starts"
                            Interval="100" IsSnapToTickEnabled="True"
                            Maximum="40" Minimum="1" SmallChange="100" TickFrequency="1" TickPlacement="BottomRight" 
                            Value="{Binding DataContext.ClusterSize}" 
                            HorizontalAlignment="Stretch" Margin="0,0,0,0"
                            MinWidth="175"/>
                        <Slider  Template="{DynamicResource LabelledSliderEditable}" 
                        Tag="Health Emergency %"
                        ToolTip="How low your health must drop before the potion is used"
                                Interval="500" Maximum="99" Minimum="0" 
                                SmallChange="1" LargeChange="5"
                                TickPlacement="None" 
                                Value="{Binding DataContext.EmergencyHealthPct, Converter={StaticResource PercentConverter}}" 
                                HorizontalAlignment="Stretch" Margin="0"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox>
                    <GroupBox.Header>Kiting</GroupBox.Header>
                    <StackPanel>
                        <WrapPanel>
                            <RadioButton Content="Always" IsChecked="{Binding DataContext.KiteMode, ConverterParameter=Always, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}}"  />
                            <RadioButton Content="Never" IsChecked="{Binding DataContext.KiteMode, ConverterParameter=Never, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}}" />
                            <RadioButton Content="Elites" IsChecked="{Binding DataContext.KiteMode, ConverterParameter=Elites, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}}" />
                            <RadioButton Content="Bosses" IsChecked="{Binding DataContext.KiteMode, ConverterParameter=Bosses, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}}" />
                        </WrapPanel>
                        <StackPanel Margin="0,5,0,0" Visibility="{Binding DataContext.KiteMode, ConverterParameter=Never, Converter={StaticResource HiddenWhenEnumTrueConverter}}">
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Kite Distance"
                                ToolTip="How close monsters can be before bot should move away (radius distance)"                  
                                Maximum="30" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.KiteDistance}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Kite Stutter Duration"
                                ToolTip="How long each stutter should last when kiting, during this time the bot attacks"                  
                                Maximum="3000" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.KiteStutterDuration}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Kite Stutter Delay"
                                ToolTip="How much kiting can happen before a stutter begins"                  
                                Maximum="3000" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.KiteStutterDelay}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Kite Health %"
                                ToolTip="Kiting will only happen if your health is equal to or below this amount"                  
                                Maximum="100" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.KiteHealthPct}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>                            
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox>
                    <GroupBox.Header>Sight Range</GroupBox.Header>
                    <StackPanel>
                        <StackPanel Margin="0,5,0,0">
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Trash Monsters"
                                ToolTip="How close it must be before the bot knows it is there."                  
                                Maximum="100" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.TrashRange}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Elite Monsters"
                                ToolTip="How close it must be before the bot knows it is there."                  
                                Maximum="100" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.EliteRange}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Health Globes"
                                ToolTip="How close it must be before the bot knows it is there."                
                                Maximum="100" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.HealthGlobeRange}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Shrines"
                                ToolTip="How close it must be before the bot knows it is there."                 
                                Maximum="100" Minimum="0" SmallChange="100" TickFrequency="1" TickPlacement="None" 
                                Value="{Binding DataContext.ShrineRange}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="175"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox>
                    <GroupBox.Header>Resource Management</GroupBox.Header>
                    <StackPanel>
                        <StackPanel Margin="0,5,0,0">
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Primary Reserve"
                                ToolTip="An amount saved for skills that require resource but have cooldowns and/or restrictive conditions" 
                                Interval="5" Maximum="100" Minimum="0" 
                                SmallChange="5" LargeChange="5" 
                                TickPlacement="BottomRight" TickFrequency="5"
                                Value="{Binding DataContext.PrimaryEnergyReserve}" 
                                HorizontalAlignment="Stretch" Margin="2"
                                />
                            <Slider Template="{DynamicResource LabelledSliderEditable}" 
                                Tag="Secondary Reserve"
                                ToolTip="An amount saved for skills that require resource but have cooldowns and/or restrictive conditions" 
                                Interval="5" Maximum="100" Minimum="0" 
                                SmallChange="5" LargeChange="5" 
                                TickPlacement="BottomRight" TickFrequency="5"
                                Value="{Binding DataContext.SecondaryEnergyReserve}" 
                                HorizontalAlignment="Stretch" Margin="2"
                                />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox>
                    <GroupBox.Header>Weighting Overrides</GroupBox.Header>
                    <StackPanel>
                        <TextBlock Margin="3,8,3,10" TextWrapping="Wrap">Override weighting formulas. You can enter basic numbers or simple calculations such as "100 * (100 - Actor.Distance)". Properties on 'Actor' and 'Player' objects can be used in formulas.</TextBlock>
                        <ListBox Padding="5"
                            d:DataContext="{Binding Source={StaticResource DesignViewModel}}"
                            ItemsSource="{Binding DataContext.WeightOverrides}"   
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"       
                            AlternationCount="100000"
                            SelectionMode="Single"
                            ui:DragDrop.IsDragSource="True"
                            ui:DragDrop.IsDropTarget="True"
                            ui:DragDrop.DropHandler="{Binding DataContext.DropHandler}"
                            ui:DragDrop.DragDropContext="SkillOrder"
                            ui:DragDrop.DragAdornerTemplate="{StaticResource DragAdorner}"
                            VerticalAlignment="Top"
                            ItemTemplate="{DynamicResource WeightOrderListBoxItemTemplate}"
                            ItemContainerStyle="{DynamicResource OrderListBoxItemStyle}"
                            >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>
                    </StackPanel>
                </GroupBox>

                <GroupBox>
                    <GroupBox.Header>Skill Order</GroupBox.Header>
                    <StackPanel>
                        <TextBlock Margin="3,8,3,10" TextWrapping="Wrap">Drag the items below to prioritize the order they're cast in.</TextBlock>
                        <ListBox Padding="5"
                            d:DataContext="{Binding Source={StaticResource DesignViewModel}}"
                            ItemsSource="{Binding DataContext.ActiveSkills}"   
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"       
                            AlternationCount="100000"
                            SelectionMode="Single"
                            ui:DragDrop.IsDragSource="True"
                            ui:DragDrop.IsDropTarget="True"
                            ui:DragDrop.DropHandler="{Binding DataContext.DropHandler}"
                            ui:DragDrop.DragDropContext="SkillOrder"
                            ui:DragDrop.DragAdornerTemplate="{StaticResource DragAdorner}"
                            VerticalAlignment="Top"
                            ItemTemplate="{DynamicResource SkillOrderListBoxItemTemplate}"
                            ItemContainerStyle="{DynamicResource OrderListBoxItemStyle}"
                            >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>
                </StackPanel>
                </GroupBox>
               

                <ItemsControl                       
                    d:DataContext="{Binding Source={StaticResource DesignViewModel}}"
                    ItemsSource="{Binding DataContext.ActiveSkills}" 
                    ItemTemplate="{DynamicResource SkillTemplate}" />

            </StackPanel>
        </Grid>
    </Border>
</UserControl>

    