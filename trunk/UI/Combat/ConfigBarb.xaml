<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             mc:Ignorable="d"  Foreground="{DynamicResource TextBrush}" Background="#434343" Padding="10,0,0,0"
             d:DesignHeight="1140" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ut:PercentConverter x:Key="percentConverter" />
            <ut:EnumBooleanConverter x:Key="enumBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
        <StackPanel Margin="0,10,5,0">
            <GroupBox>
                <GroupBox.Header>General</GroupBox.Header>
                <StackPanel>
                    <!--<TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">The amount of time required between casts</TextBlock>-->
                    <!--<UniformGrid Columns="2">
                        <TextBlock Text="Min-Distance before Kite" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="500" Maximum="80" Minimum="0" 
                            SmallChange="1" LargeChange="5" 
                            TickPlacement="BottomRight" TickFrequency="1"
                            Value="{Binding Path=Barb.KiteLimit}" 
                            HorizontalAlignment="Stretch" Margin="2,0"/>
                    </UniformGrid>-->
                    <UniformGrid Columns="2" Grid.Row="1">
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.FuryDumpAlways}" ToolTip="Spam fury spenders when at max fury">Fury Dump always</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>Wrath of the Berserker</GroupBox.Header>
                <UniformGrid Columns="2">
                    <RadioButton GroupName="WOTBMode" Content="Use on Hard Elites Only" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=HardElitesOnly}"  />
                    <RadioButton GroupName="WOTBMode" Content="Use on Any Elite or Ignore Elites" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Normal}" />
                    <RadioButton GroupName="WOTBMode" Content="Use When not on Cooldown" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenReady}" />
                    <RadioButton GroupName="WOTBMode" Content="Use Whenever in Combat" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenInCombat}" />
                    <!--<CheckBox Margin="2" IsChecked="{Binding Path=Barb.WOTBHardOnly}" ToolTip="Saves WOTB for use on elites with Arcane, Frozen, Jailer, Molten, Electrified and Reflects Damage">Use WOTB on hard elites only</CheckBox>-->
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseWOTBGoblin}">Use on Goblins</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.FuryDumpWOTB}">Fury Dump</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Barb.IgnoreGoldInWOTB}" ToolTip="Ignores gold when WOTB is up" Content="Ignore Gold Stacks"/>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.WOTBEmergencyHealth}" ToolTip="Force use WOTB if health is below emergency health" Content="In Emergencies"/>
                </UniformGrid>
            </GroupBox>            
            <GroupBox>
                <GroupBox.Header>Out of Combat</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">If skills should be used when no monsters are around</TextBlock>
                    <UniformGrid Columns="2">
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.ThreatShoutOOC}" ToolTip="Use Threatening Shout Out of Combat to generate Fury">Threating Shout</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseLeapOOC}" ToolTip="Leap Out Of Combat">Leap</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseChargeOOC}" ToolTip="Furious Charge Out Of Combat">Furious Charge</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Always Use</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">If skills should be used immediately when 'off cooldown'</TextBlock>
                    <UniformGrid Columns="2">
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.IgnorePainOffCooldown}" ToolTip="Use Ignore Pain as soon as it's available">Ignore Pain</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>            
            <GroupBox>
                <GroupBox.Header>Cluster Size</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">The amount of monsters grouped up, before spell cast</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Threatening Shout" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="1" Maximum="5" Minimum="1"
                                SmallChange="1" LargeChange="10"
                                TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                                Value="{Binding Path=Barb.MinThreatShoutMobCount}" 
                                HorizontalAlignment="Stretch" Margin="2,0"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Health Percent</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">Amount health must be below, before casting spell</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Hota/Whirlwind" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center" Width="Auto" Margin="10,0" ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="99" Minimum="0" SmallChange="1" LargeChange="5"
                                TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                                Value="{Binding Path=Barb.MinHotaHealth, Converter={StaticResource percentConverter}}"
                                HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                                ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                        <TextBlock Grid.Column="0" Text="Ignore Pain" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center" Width="Auto" Margin="10,0" ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="100" Minimum="0" SmallChange="1" LargeChange="5"
                                TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                                Value="{Binding Path=Barb.IgnorePainMinHealthPct, Converter={StaticResource percentConverter}}"
                                HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                                ToolTip="Minimum Health to use Ignore Pain" />
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Recast Delay (ms)</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">The amount of time required to pass between casts</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Threatening Shout" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="15000" Minimum="0" 
                                SmallChange="500" LargeChange="500" 
                                TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                                Value="{Binding Path=Barb.ThreateningShoutWaitDelay}" 
                                HorizontalAlignment="Stretch" Margin="2,0"/>
                        <TextBlock Text="Rend" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="15000" Minimum="0" 
                                SmallChange="500" LargeChange="500" 
                                TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                                Value="{Binding Path=Barb.RendWaitDelay}" 
                                HorizontalAlignment="Stretch" Margin="2,0"/>
                        <TextBlock Text="Ancient Spear" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="15000" Minimum="0" 
                                SmallChange="500" LargeChange="500" 
                                TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                                Value="{Binding Path=Barb.AncientSpearWaitDelay}" 
                                HorizontalAlignment="Stretch" Margin="2,0"/>
                        <TextBlock Text="War Cry" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="500" Maximum="60000" Minimum="200" 
                                SmallChange="500" LargeChange="500" 
                                TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                                Value="{Binding Path=Barb.WarCryWaitDelay}" 
                                HorizontalAlignment="Stretch" Margin="2,0"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Whirlwind">
                <StackPanel>
                    <UniformGrid Columns="2">
                        <CheckBox Margin="2" IsChecked="{Binding Barb.WWMoveAlways}" ToolTip="Always use whirlwind for movement" Content="Always use for Movement"/>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.TargetBasedZigZag}" ToolTip="Uses Monster positions as WW points instead of random XYZ">Multi-Target Based ZigZag</CheckBox>
                    </UniformGrid>
                    <StackPanel>
                        <TextBlock Margin="10,5,10,2" Text="Range to stop WW for clicking things:" FontWeight="Normal" TextAlignment="Left" VerticalAlignment="Center" Width="Auto" ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                			Interval="500" Maximum="20" Minimum="0" SmallChange="1" LargeChange="5"
                			TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True"
                			Value="{Binding Barb.WWMoveStopDistance}"
                			HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                			ToolTip="When bot gets within range of objects, it needs to stop casting WW in order to interact" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="2">
                <GroupBox.Header>Sprint</GroupBox.Header>
                <UniformGrid Columns="2">
                    <TextBlock Text="When to use Sprint" />
                    <RadioButton GroupName="SprintMode" Content="Anytime" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Always}"  />
                    <RadioButton GroupName="SprintMode" Content="In Combat only" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=CombatOnly}" />
                    <RadioButton GroupName="SprintMode" Content="Out of Combat Only" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=MovementOnly}" />
                </UniformGrid>
            </GroupBox>
            <Button Grid.Row="11" Margin="5" HorizontalAlignment="Center" Command="{Binding ResetBarbCommand}">Reset</Button>
        </StackPanel>
    </ScrollViewer>
</UserControl>
