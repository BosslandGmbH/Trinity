<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             mc:Ignorable="d"  Foreground="{DynamicResource TextBrush}"
             d:DesignHeight="640" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Don't format this line otherwise Db can't open config window -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ut:PercentConverter x:Key="percentConverter" />
            <ut:EnumBooleanConverter x:Key="enumBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!--Emergency Health, Resource, Hota/WW Slider, Threating Shout -->

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Potion %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="99" Minimum="0" 
                    SmallChange="1" LargeChange="5"
                    TickPlacement="None" 
                    Value="{Binding Path=Barb.PotionLevel, Converter={StaticResource percentConverter}}" 
                    HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
            <Grid Grid.Row="1" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Globe Health %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}"
                      Interval="500" Maximum="100" Minimum="0"
                      SmallChange="1" LargeChange="5"
                      TickPlacement="None"
                      Value="{Binding Path=Barb.HealthGlobeLevel, Converter={StaticResource percentConverter}}"
                      HorizontalAlignment="Stretch" Margin="2"/>
                <TextBlock Grid.Column="2" Text="Globe Resource %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}"
                      Interval="500" Maximum="100" Minimum="0"
                      SmallChange="1" LargeChange="5"
                      TickPlacement="None"
                      Value="{Binding Path=Barb.HealthGlobeLevelResource, Converter={StaticResource percentConverter}}"
                      HorizontalAlignment="Stretch" Margin="2"
                      ToolTip="Only applies when Reaper's Wraps are equipped"/>
            </Grid>
            <StackPanel Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Hota/WW Threshold" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center" Width="Auto" Margin="10,0" 
                           ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                    <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="99" Minimum="0" SmallChange="1" LargeChange="5"
                    TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                    Value="{Binding Path=Barb.MinHotaHealth, Converter={StaticResource percentConverter}}"
                    HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                    ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                </Grid>
                <GroupBox Header="Ignore Pain">
                    <StackPanel>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Barb.IgnorePainOffCooldown}" ToolTip="Use Ignore Pain as soon as it's available">Use Ignore Pain Off Cooldown</CheckBox>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="3*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Ignore Pain Min Health %" FontWeight="Bold" TextAlignment="Left" VerticalAlignment="Center" Width="Auto" Margin="10,0" 
                           ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />
                            <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                    Interval="500" Maximum="100" Minimum="0" SmallChange="1" LargeChange="5"
                                    TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                                    Value="{Binding Path=Barb.IgnorePainMinHealthPct, Converter={StaticResource percentConverter}}"
                                    HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                                    ToolTip="Minimum Health to use Ignore Pain" />
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Whirlwind">
                    <StackPanel>
                        <UniformGrid Columns="2">
                            <CheckBox Margin="2" IsChecked="{Binding Barb.WWMoveAlways}" ToolTip="Always use whirlwind for movement" Content="Always use for Movement"/>
                            <CheckBox Margin="2" IsChecked="{Binding Path=Barb.TargetBasedZigZag}" ToolTip="Uses Monster positions as WW points instead of random XYZ">Multi-Target Based ZigZag</CheckBox>
                        </UniformGrid>
                        <StackPanel>
                            <TextBlock Margin="10,5,10,2" Text="Range to stop WW for clicking things:" FontWeight="Bold" TextAlignment="Left" VerticalAlignment="Center" Width="Auto"
                				ToolTip="Minimum Health to use Hammer of the Ancients, only applies when Whirlwind is available" />

                                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                				Interval="500" Maximum="20" Minimum="0" SmallChange="1" LargeChange="5"
                				TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True"
                				Value="{Binding Barb.WWMoveStopDistance}"
                				HorizontalAlignment="Stretch" Margin="2,0" MinWidth="245" 
                				ToolTip="When bot gets within range of objects, it needs to stop casting WW in order to interact" />
                           
                        </StackPanel>
      
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Min Threatening Shout Mob Count" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="5" Minimum="1"
                SmallChange="1" LargeChange="10"
                TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                Value="{Binding Path=Barb.MinThreatShoutMobCount}" 
                HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Threatening Shout Delay (ms)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="15000" Minimum="0" 
                    SmallChange="100" LargeChange="500" 
                    TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                Value="{Binding Path=Barb.ThreateningShoutWaitDelay}" 
                HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Min-Distance before Kite" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="80" Minimum="0" 
                    SmallChange="1" LargeChange="5" 
                    TickPlacement="BottomRight" TickFrequency="1"
                    Value="{Binding Path=Barb.KiteLimit}" 
                    HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
            <Grid Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Rend Delay (ms)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="15000" Minimum="0" 
                    SmallChange="100" LargeChange="500" 
                    TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                    Value="{Binding Path=Barb.RendWaitDelay}" 
                    HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
            <Grid Grid.Row="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Ancient Spear Delay (millisecond)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="15000" Minimum="0" 
                    SmallChange="100" LargeChange="500" 
                    TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                    Value="{Binding Path=Barb.AncientSpearWaitDelay}" 
                    HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>

            <Grid Grid.Row="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="War Cry Delay (millisecond)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="60000" Minimum="200" 
                    SmallChange="100" LargeChange="500" 
                    TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="100"
                    Value="{Binding Path=Barb.WarCryWaitDelay}" 
                    HorizontalAlignment="Stretch" Margin="2,0"/>
            </Grid>
        
            <!--Kite-->
        <!--CheckBox-->
        <Grid Grid.Row="9" Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>Wrath of the Berserker</GroupBox.Header>
                <UniformGrid Columns="2">
                    <RadioButton GroupName="WOTBMode" Content="Use on Hard Elites Only" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=HardElitesOnly}"  />
                    <RadioButton GroupName="WOTBMode" Content="Use on Any Elite or Ignore Elites" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Normal}" />
                    <RadioButton GroupName="WOTBMode" Content="Use When not on Cooldown" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenReady}" />
                    <RadioButton GroupName="WOTBMode" Content="Use Whenever in Combat" IsChecked="{Binding Path=Barb.WOTBMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenInCombat}" />
                    <!--<CheckBox Margin="2" IsChecked="{Binding Path=Barb.WOTBHardOnly}" ToolTip="Saves WOTB for use on elites with Arcane, Frozen, Jailer, Molten, Electrified and Reflects Damage">Use WOTB on hard elites only</CheckBox>-->
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseWOTBGoblin}">Use on Goblins</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.FuryDumpWOTB}">Fury Dump</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Barb.IgnoreGoldInWOTB}" ToolTip="Ignores gold when WOTB is up" Content="Ignore Gold Stacks"/>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Barb.WOTBEmergencyHealth}" ToolTip="Force use WOTB if health is below emergency health" Content="Use WOTB on emergencies"/>
                </UniformGrid>
            </GroupBox>
            <UniformGrid Columns="2" Grid.Row="1">
                <CheckBox Margin="2" IsChecked="{Binding Path=Barb.FuryDumpAlways}" ToolTip="Spam fury spenders when at max fury">Fury Dump always</CheckBox>
                <CheckBox Margin="2" IsChecked="{Binding Path=Barb.ThreatShoutOOC}" ToolTip="Use Threatening Shout Out of Combat to generate Fury">Use Threating Shout OOC</CheckBox>
                <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseLeapOOC}" ToolTip="Leap Out Of Combat">Leap OOC</CheckBox>
                <CheckBox Margin="2" IsChecked="{Binding Path=Barb.UseChargeOOC}" ToolTip="Furious Charge Out Of Combat">Furious Charge OOC</CheckBox>
            </UniformGrid>
            <GroupBox Grid.Row="2">
                <GroupBox.Header>Sprint</GroupBox.Header>
                <UniformGrid Columns="2">
                    <TextBlock Text="When to use Sprint" />
                    <RadioButton GroupName="SprintMode" Content="Anytime" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Always}"  />
                    <RadioButton GroupName="SprintMode" Content="In Combat only" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=CombatOnly}" />
                    <RadioButton GroupName="SprintMode" Content="Out of Combat Only" IsChecked="{Binding Path=Barb.SprintMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=MovementOnly}" />
                </UniformGrid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="10" Margin="2">
            <ScrollViewer Tag="Combat\Avoidance.xaml" DataContext="{Binding Path=Barb}"/>
        </Grid>
        <!--Reset Button-->
        <Button Grid.Row="11" Margin="5" HorizontalAlignment="Center" Command="{Binding ResetBarbCommand}">Reset</Button>
    </Grid>
    </ScrollViewer>
</UserControl>
