<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Trinity.UI.UIComponents.Converters"
             mc:Ignorable="d"  Foreground="{DynamicResource TextBrush}" Background="#434343" Padding="10,0,0,0"
             d:DesignHeight="1240" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Don't format this line otherwise Db can't open config window -->
            <ResourceDictionary.MergedDictionaries><ResourceDictionary Source="..\Template.xaml"/></ResourceDictionary.MergedDictionaries>

            <converters:PercentConverter x:Key="percentConverter" />
            <converters:EnumBooleanConverter x:Key="enumBooleanConverter" />
            <converters:BoolToVisibilityConverter x:Key="visibleWhenTrueConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
        <StackPanel Margin="0,10,5,0">

            <GroupBox>
                <GroupBox.Header>General</GroupBox.Header>
                <StackPanel>
                    <UniformGrid Grid.Row="0" Columns="2" HorizontalAlignment="Center">
                        <CheckBox Margin="2" IsChecked="{Binding Path=Monk.DisableMantraSpam}" ToolTip="Disable Spamming Mantras (also disables the delay slider)">Disable Mantra Spam</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Monk.DisableExplodingPalm}" ToolTip="Prevent the bot from casting Exploding Palm" Content="Disable Exploding Palm"/>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Monk.PrimaryBeforeSSS}" ToolTip="Cast primariy until exploding palm is applied (only works with Uliana's build)" Content="Primary Before SSS"/>
                    </UniformGrid>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Apply Exploading Palm %" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="15" Minimum="1"
                            SmallChange="1" LargeChange="5"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.ExploadingPalmMaxMobCount}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                        <TextBlock Grid.Column="0" Text="Apply Static Charge %" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" ToolTip="Apply Static Charge to % of mobs within 20 yards" Template="{DynamicResource SliderEditable}"
                            Interval="1" Maximum="100" Minimum="0"
                            SmallChange="1" LargeChange="5"
                            TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.StaticChargeMaxMobPct, Converter={StaticResource percentConverter}}"
                            HorizontalAlignment="Stretch" Margin="2"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Out of Combat</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">If skills should be used when no monsters are around</TextBlock>
                    <UniformGrid Columns="2">
                        <CheckBox Margin="2" IsChecked="{Binding Path=Monk.BreathOfHeavenOOC}" ToolTip="Cast Breath of Heaven Out of Combat" Content="Breath of Heaven"/>
                        <CheckBox Margin="2" IsChecked="{Binding Path=Monk.UseDashingStrikeOOC}" ToolTip="Use Dashing Strike for OOC Movement">Dashing Strike</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Always Use</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">If skills should be used immediately when 'off cooldown'</TextBlock>
                    <UniformGrid Columns="2">
                        <CheckBox Margin="2" IsChecked="{Binding Monk.SSSOffCD}" ToolTip="Cast Seven-Sided-Strike as soon as it's available" Content="Seven-Sided Strike"/>
                        <CheckBox Margin="2" IsChecked="{Binding Monk.AlwaysBlindingFlash}" ToolTip="Always cast Blinding Flash as soon as it's available" Content="Blinding Flash"/>
                        <CheckBox Margin="2" IsChecked="{Binding Monk.AlwaysInnerSanctury}" ToolTip="Always cast InnerSancturary as soon as it's available" Content="Inner Sanctuary"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>            
            <GroupBox>
                <GroupBox.Header>Cluster Size</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">The amount of monsters grouped up, before spell cast</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Cyclone Strike" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="10" Minimum="1"
                            SmallChange="1" LargeChange="10"
                            TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.MinCycloneTrashCount}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                        <TextBlock Grid.Column="0" Text="Wave of Light" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="15" Minimum="1"
                            SmallChange="1" LargeChange="5"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.MinWoLTrashCount}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Health Percent</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">Amount health must be below, before casting spell</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" Text="Serenity" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="100" Minimum="1"
                            SmallChange="1" LargeChange="5"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.SerenityHealthPct, Converter={StaticResource percentConverter}}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>Recast Delay (ms)</GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Margin="-3,-3,0,10">The amount of time required to pass between casts</TextBlock>
                    <UniformGrid Columns="2">
                        <TextBlock Grid.Column="0" ToolTip="Time to wait (in Milliseconds) between cyclone strikes" Text="Cyclone Strike" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" ToolTip="Time to wait (in Milliseconds) between casting cyclone strikes" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="8000" Minimum="0"
                            SmallChange="10" LargeChange="100" TickFrequency="100"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.CycloneStrikeDelay}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                        <TextBlock Visibility="{Binding Monk.DisableMantraSpam,Converter={StaticResource visibleWhenTrueConverter}}" Grid.Column="0" ToolTip="Time to wait (in Milliseconds) between Mantra casts" Text="Mantras" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Visibility="{Binding Monk.DisableMantraSpam,Converter={StaticResource visibleWhenTrueConverter}}" Template="{DynamicResource SliderEditable}" 
                            Grid.Column="1" ToolTip="Time to wait (in Milliseconds) between Mantra casts" 
                            Interval="1" Maximum="5000" Minimum="200" TickFrequency="100"
                            SmallChange="10" LargeChange="100"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.MantraDelay}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                        <TextBlock ToolTip="Time to wait (in Milliseconds) between casting dashing strikes (in combat)" Text="Dashing Strike" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider ToolTip="Time to wait (in Milliseconds) between casting dashing strikes (in combat)" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="8000" Minimum="500"
                            SmallChange="100" LargeChange="500" TickFrequency="100"
                            TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.DashingStrikeDelay}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Row="11">
                <GroupBox.Header>Epiphany</GroupBox.Header>
                <UniformGrid Columns="2">
                    <RadioButton GroupName="EpiphanyMode" Content="Use on Hard Elites Only" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=HardElitesOnly}"  />
                    <RadioButton GroupName="EpiphanyMode" Content="Use when Elites are nearby" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Normal}" />
                    <RadioButton GroupName="EpiphanyMode" Content="Use When not on Cooldown" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenReady}" />
                    <RadioButton GroupName="EpiphanyMode" Content="Use Whenever in Combat" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenInCombat}" />
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.UseEpiphanyGoblin}">Use on Goblins</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.EpiphanyEmergencyHealth}" ToolTip="Force use Epiphany if health is below emergency health" Content="Use Epiphany on emergencies"/>
                </UniformGrid>
            </GroupBox>
            <GroupBox Grid.Row="12" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <GroupBox.Header>Tempest Rush</GroupBox.Header>
                <StackPanel>
                    <UniformGrid Grid.Row="1" Margin="0,0,0,0" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Always" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Always}" />
                        <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Movement Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=MovementOnly}" />
                        <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Elites and Groups Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=ElitesGroupsOnly}" />
                        <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Movement+Trash Mobs" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=TrashOnly}" />
                        <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Combat Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=CombatOnly}" />
                        <CheckBox Margin="20,0" IsChecked="{Binding Path=Monk.TargetBasedZigZag}" ToolTip="Used Monster positions for Tempest Rush instead of random XYZ">Multi-Target Based ZigZag</CheckBox>
                    </UniformGrid>
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Min Spirit" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="150" Minimum="25"
                            SmallChange="1" LargeChange="10"
                            TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.TR_MinSpirit}" 
                        HorizontalAlignment="Stretch" Margin="2"/>
                        <TextBlock Grid.Column="2" Text="Min Dist." FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}" 
                            Interval="1" Maximum="50" Minimum="0"
                            SmallChange="1" LargeChange="5"
                            TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                            Value="{Binding Path=Monk.TR_MinDist}" 
                            HorizontalAlignment="Stretch" Margin="2"/>
                    </Grid>
                </StackPanel>
            </GroupBox>
            <Button Grid.Row="14" Margin="5" HorizontalAlignment="Center" Command="{Binding ResetMonkCommand}">Reset</Button>
        </StackPanel>
    </ScrollViewer>
</UserControl>
