<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             mc:Ignorable="d"  Foreground="{DynamicResource TextBrush}"
             d:DesignHeight="640" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Don't format this line otherwise Db can't open config window -->
            <ResourceDictionary.MergedDictionaries><ResourceDictionary Source="..\Template.xaml"/></ResourceDictionary.MergedDictionaries>

            <ut:PercentConverter x:Key="percentConverter" />
            <ut:EnumBooleanConverter x:Key="enumBooleanConverter" />
            <ut:BoolToVisibilityConverter x:Key="visibleWhenTrueConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <!--Emergency Health and Resource-->
        <Grid Grid.Row="0" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Potion %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                    Interval="500" Maximum="99" Minimum="0" 
                    SmallChange="1" LargeChange="5"
                    TickPlacement="None" 
                    Value="{Binding Path=Monk.PotionLevel, Converter={StaticResource percentConverter}}" 
                    HorizontalAlignment="Stretch" Margin="2"/>
        </Grid>

        <Grid Grid.Row="1" Margin="2">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <TextBlock Text="Globe Health %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
          <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}"
                  Interval="500" Maximum="100" Minimum="0"
                  SmallChange="1" LargeChange="5"
                  TickPlacement="None"
                  Value="{Binding Path=Monk.HealthGlobeLevel, Converter={StaticResource percentConverter}}"
                  HorizontalAlignment="Stretch" Margin="2"/>
          <TextBlock Grid.Column="2" Text="Globe Resource %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
          <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}"
                  Interval="500" Maximum="100" Minimum="0"
                  SmallChange="1" LargeChange="5"
                  TickPlacement="None"
                  Value="{Binding Path=Monk.HealthGlobeLevelResource, Converter={StaticResource percentConverter}}"
                  HorizontalAlignment="Stretch" Margin="2"
                  ToolTip="Only applies when Reaper's Wraps are equipped"/>
        </Grid>
        <!--CheckBox-->
        <Grid Grid.Row="2" Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <UniformGrid Grid.Row="0" Columns="2" HorizontalAlignment="Center">
                <CheckBox Margin="2" IsChecked="{Binding Path=Monk.DisableMantraSpam}" ToolTip="Disable Spamming Mantras (also disables the delay slider)">Disable Mantra Spam</CheckBox>
                <CheckBox Margin="2" IsChecked="{Binding Path=Monk.DisableExplodingPalm}" ToolTip="Prevent the bot from casting Exploding Palm" Content="Disable Exploding Palm"/>
                <CheckBox Margin="2" IsChecked="{Binding Path=Monk.PrimaryBeforeSSS}" ToolTip="Cast primariy until exploding palm is applied (only works with Uliana's build)" Content="Cast Primary Before SSS"/>
                <CheckBox Margin="2" IsChecked="{Binding Monk.SSSOffCD}" ToolTip="Cast Seven-Sided-Strike as soon as it's available" Content="Use SSS Off CD"/>
                <CheckBox Margin="2" IsChecked="{Binding Monk.AlwaysBlindingFlash}" ToolTip="Always cast Blinding Flash as soon as it's available" Content="Non-Stop Blinding Flash"/>
                <CheckBox Margin="2" IsChecked="{Binding Monk.AlwaysInnerSanctury}" ToolTip="Always cast InnerSancturary as soon as it's available" Content="Non-Stop Inner Sanctuary"/>
                <CheckBox Margin="2" IsChecked="{Binding Path=Monk.BreathOfHeavenOOC}" ToolTip="Cast Breath of Heaven Out of Combat" Content="Breath of Heaven OOC"/>
                </UniformGrid>
        </Grid>

        <Grid Grid.Row="3" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Min. Cyclone Strike Trash Count" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="10" Minimum="1"
                SmallChange="1" LargeChange="10"
                TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.MinCycloneTrashCount}" 
                HorizontalAlignment="Stretch" Margin="2"/>
        </Grid>
        <Grid Grid.Row="4" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" ToolTip="Time to wait (in Milliseconds) between cyclone strikes" Text="Cyclone Strike Delay (ms)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" ToolTip="Time to wait (in Milliseconds) between casting cyclone strikes" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="8000" Minimum="0"
                SmallChange="10" LargeChange="100" TickFrequency="100"
                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.CycloneStrikeDelay}" 
                HorizontalAlignment="Stretch" Margin="2"/>
        </Grid>
            <Grid Grid.Row="5" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Visibility="{Binding Monk.DisableMantraSpam,Converter={StaticResource visibleWhenTrueConverter}}" Grid.Column="0" ToolTip="Time to wait (in Milliseconds) between Mantra casts" Text="Mantra Delay (ms)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Visibility="{Binding Monk.DisableMantraSpam,Converter={StaticResource visibleWhenTrueConverter}}" Template="{DynamicResource SliderEditable}" 
                Grid.Column="1" ToolTip="Time to wait (in Milliseconds) between Mantra casts" 
                Interval="1" Maximum="5000" Minimum="200" TickFrequency="100"
                SmallChange="10" LargeChange="100"
                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.MantraDelay}" 
                HorizontalAlignment="Stretch" Margin="2"/>
            </Grid>
        
        <Grid Grid.Row="6" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Min. Wave of Light Trash Count" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="15" Minimum="1"
                SmallChange="1" LargeChange="5"
                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.MinWoLTrashCount}" 
                HorizontalAlignment="Stretch" Margin="2"/>
        </Grid>

            <Grid Grid.Row="7" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Serenity Health %" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="100" Minimum="1"
                SmallChange="1" LargeChange="5"
                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.SerenityHealthPct, Converter={StaticResource percentConverter}}" 
                HorizontalAlignment="Stretch" Margin="2"/>
            </Grid>

            <Grid Grid.Row="8" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Apply Exploading Palm to" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                Interval="1" Maximum="15" Minimum="1"
                SmallChange="1" LargeChange="5"
                TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.ExploadingPalmMaxMobCount}" 
                HorizontalAlignment="Stretch" Margin="2"/>
            <TextBlock Grid.Column="3" Text="Units" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="9" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Apply Static Charge to" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
            <Slider Grid.Column="1" ToolTip="Apply Static Charge to % of mobs within 20 yards" Template="{DynamicResource SliderEditable}"
                Interval="1" Maximum="100" Minimum="0"
                SmallChange="1" LargeChange="5"
                TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True"
                Value="{Binding Path=Monk.StaticChargeMaxMobPct, Converter={StaticResource percentConverter}}"
                HorizontalAlignment="Stretch" Margin="2"/>
            <TextBlock Grid.Column="3" Text="% of Units" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
        </Grid>

            <GroupBox Grid.Row="10">
                <GroupBox.Header>Dashing Strike</GroupBox.Header>
                <UniformGrid Columns="2">
                    <TextBlock ToolTip="Time to wait (in Milliseconds) between casting dashing strikes (in combat)" Text="Dashing Strike Delay (ms)" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                    <Slider ToolTip="Time to wait (in Milliseconds) between casting dashing strikes (in combat)" Template="{DynamicResource SliderEditable}" 
                    Interval="1" Maximum="8000" Minimum="500"
                    SmallChange="100" LargeChange="500" TickFrequency="100"
                    TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                    Value="{Binding Path=Monk.DashingStrikeDelay}" 
                    HorizontalAlignment="Stretch" Margin="2"/>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.UseDashingStrikeOOC}" ToolTip="Use Dashing Strike for OOC Movement">Use Dashing Strike OOC</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.DashingStrikeUseOOCDelay}" ToolTip="Apply delay to Dashing Strike OOC as well">Apply delay to OOC casting</CheckBox>
                </UniformGrid>
            </GroupBox>

            <GroupBox Grid.Row="11">
                <GroupBox.Header>Epiphany</GroupBox.Header>
                <UniformGrid Columns="2">
                    <RadioButton GroupName="EpiphanyMode" Content="Use on Hard Elites Only" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=HardElitesOnly}"  />
                    <RadioButton GroupName="EpiphanyMode" Content="Use when Elites are nearby" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Normal}" />
                    <RadioButton GroupName="EpiphanyMode" Content="Use When not on Cooldown" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenReady}" />
                    <RadioButton GroupName="EpiphanyMode" Content="Use Whenever in Combat" IsChecked="{Binding Path=Monk.EpiphanyMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=WhenInCombat}" />
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.UseEpiphanyGoblin}">Use on Goblins</CheckBox>
                    <CheckBox Margin="2" IsChecked="{Binding Path=Monk.EpiphanyEmergencyHealth}" ToolTip="Force use Epiphany if health is below emergency health" Content="Use Epiphany on emergencies"/>
                </UniformGrid>
            </GroupBox>


        <!--Options for TR-->
        <GroupBox Grid.Row="12" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <GroupBox.Header>
                Tempest Rush
            </GroupBox.Header>
            <StackPanel>
                <UniformGrid Grid.Row="1" Margin="0,0,0,0" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Always" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Always}" />
                    <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Movement Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=MovementOnly}" />
                    <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Elites and Groups Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=ElitesGroupsOnly}" />
                    <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Movement+Trash Mobs" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=TrashOnly}" />
                    <RadioButton Margin="20,0" GroupName="TempestRushOption" Content="Combat Only" IsChecked="{Binding Path=Monk.TROption, Converter={StaticResource enumBooleanConverter}, ConverterParameter=CombatOnly}" />
                    <CheckBox Margin="20,0" IsChecked="{Binding Path=Monk.TargetBasedZigZag}" ToolTip="Used Monster positions for Tempest Rush instead of random XYZ">Multi-Target Based ZigZag</CheckBox>
                </UniformGrid>
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Min Spirit" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                    <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                        Interval="1" Maximum="150" Minimum="25"
                        SmallChange="1" LargeChange="10"
                        TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                        Value="{Binding Path=Monk.TR_MinSpirit}" 
                        HorizontalAlignment="Stretch" Margin="2"/>
                    <TextBlock Grid.Column="2" Text="Min Dist." FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
                    <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}" 
                        Interval="1" Maximum="50" Minimum="0"
                        SmallChange="1" LargeChange="5"
                        TickPlacement="BottomRight"  IsSnapToTickEnabled="True"
                        Value="{Binding Path=Monk.TR_MinDist}" 
                        HorizontalAlignment="Stretch" Margin="2"/>
                </Grid>
            </StackPanel>
        </GroupBox>


        <Grid Grid.Row="13" Margin="2">
            <ScrollViewer Tag="Combat\Avoidance.xaml" DataContext="{Binding Path=Monk}"/>
        </Grid>
        <!--Reset Button-->
        <Button Grid.Row="14" Margin="5" HorizontalAlignment="Center" Command="{Binding ResetMonkCommand}">Reset</Button>
    </Grid>
    </ScrollViewer>
</UserControl>
