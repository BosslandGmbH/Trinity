<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Trinity.UI.UIComponents.Converters"
             xmlns:uiComponents="clr-namespace:Trinity.UI.UIComponents"
             mc:Ignorable="d"  Foreground="{DynamicResource TextBrush}" Background="#474747" Padding="10,0,0,0"
             d:DesignHeight="1500" d:DesignWidth="450">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Don't format this line otherwise Db can't open config window -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:EnumBooleanConverter x:Key="enumBooleanConverter" />
            <converters:PercentConverter x:Key="PercentConverter" />
            <converters:SliderValueToVisibilityConverter x:Key="SliderValueToVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="VisibleWhenTrueConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <converters:PropertyValueConverter x:Key="propertyValueConverter" />
            <converters:BoolInverterConverter x:Key="BoolInverterConverter" />
     
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
        <StackPanel Margin="0,10,5,0">





            <!-- Rift Value Settings -->
            <!--<GroupBox>
                <GroupBox.Header>Rift Settings</GroupBox.Header>
                <StackPanel>
                    --><!--<Grid Grid.Row="5" Margin="5" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>--><!--
                    <TextBlock Text="Always ignore trash below % value" Margin="2,0,2,0" FontWeight="Normal" TextAlignment="Center" />
                        <Slider Grid.Row="1" Template="{DynamicResource SliderEditable}" ToolTip="Monsters with a rift value below this threshold will always be ignored"
                                Interval="100" IsSnapToTickEnabled="True"
                                Maximum="1" Minimum="0" SmallChange="100" TickFrequency=".05" TickPlacement="BottomRight" 
                                Value="{Binding Path=Misc.RiftValueIgnoreUnitsBelow}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="200"/>
                    <TextBlock Grid.Column="2" Margin="2,10,2,0" Text="Always kill trash above % value" FontWeight="Normal" TextAlignment="Center" />
                        <Slider  Grid.Row="1" Grid.Column="2" Template="{DynamicResource SliderEditable}" ToolTip="Monsters with a rift value above this threshold will always be attacked"
                                Interval="100" IsSnapToTickEnabled="True"
                                Maximum="1" Minimum="0" SmallChange="100" TickFrequency=".05" TickPlacement="BottomRight" 
                                Value="{Binding Path=Misc.RiftValueAlwaysKillUnitsAbove}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="200"/>

                    <TextBlock Grid.Column="2" Margin="2,10,2,0" Text="Always kill when combined rift value is more than:" FontWeight="Normal" TextAlignment="Center" />
                    <Slider  Grid.Row="1" Grid.Column="2" Template="{DynamicResource SliderEditable}" ToolTip="Boost weight of monsters who have a total rift value within [cluster radius] of them greater than value."
                            Interval="100" IsSnapToTickEnabled="True"
                            Maximum="20" Minimum="0" SmallChange="100" TickFrequency=".5" TickPlacement="BottomRight" 
                            Value="{Binding Path=Misc.RiftValueAlwaysKillClusterValue}" 
                            HorizontalAlignment="Stretch" Margin="0,0,0,0"
                            MinWidth="200"/>

                    <TextBlock Grid.Column="2" Margin="2,10,2,0" Text="Always kill when rift is almost complete (%):" FontWeight="Normal" TextAlignment="Center" />
                    <Slider  Grid.Row="1" Grid.Column="2" Template="{DynamicResource SliderEditable}" ToolTip="Kill everything when rift progression has reached specified amount."
                                Interval="1" IsSnapToTickEnabled="True"
                                Maximum="100" Minimum="90" SmallChange="1" TickFrequency="1" TickPlacement="BottomRight" 
                                Value="{Binding Path=Misc.RiftProgressionAlwaysKillPct}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,0"
                                MinWidth="200"/>

                </StackPanel>
            </GroupBox>-->
         
            <GroupBox>
                <GroupBox.Header>Healing</GroupBox.Header>
                <StackPanel>
                    <UniformGrid Columns="2">
                        <TextBlock Text="Use Potion Health %" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                    Interval="500" Maximum="99" Minimum="0" 
                                    SmallChange="1" LargeChange="5"
                                    TickPlacement="None" 
                                    Value="{Binding Path=Misc.PotionLevel, Converter={StaticResource PercentConverter}}" 
                                    HorizontalAlignment="Stretch" Margin="2,0"/>
                        <TextBlock Text="Globe Health %" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Template="{DynamicResource SliderEditable}"
                                    Interval="500" Maximum="100" Minimum="0"
                                    SmallChange="1" LargeChange="5"
                                    TickPlacement="None"
                                    Value="{Binding Path=Misc.HealthGlobeLevel, Converter={StaticResource PercentConverter}}"
                                    HorizontalAlignment="Stretch" Margin="2,0"/>
                        <TextBlock Grid.Column="2" Text="Globe Search Distance" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}"
                                    Interval="500" Maximum="120" Minimum="5"
                                    SmallChange="5" LargeChange="25" TickPlacement="None"
                                    Value="{Binding Path=Misc.HealthGlobeSearchDistance, Converter={StaticResource PercentConverter}}"
                                    HorizontalAlignment="Stretch" Margin="2,0"
                                    ToolTip="Only applies when Reaper's Wraps are equipped"/>
                        <!--<TextBlock Grid.Column="2" Text="Reaper Wraps Globe Resource %" FontWeight="Normal" TextAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="3" Template="{DynamicResource SliderEditable}"
                                    Interval="500" Maximum="100" Minimum="0"
                                    SmallChange="1" LargeChange="5"
                                    TickPlacement="None"
                                    Value="{Binding Path=Misc.HealthGlobeLevelResource, Converter={StaticResource PercentConverter}}"
                                    HorizontalAlignment="Stretch" Margin="2,0"
                                    ToolTip="Only applies when Reaper's Wraps are equipped"/>-->
                     
                    </UniformGrid>
                    <UniformGrid Margin="0,15,0,0" Rows="1">
                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=Misc.CollectHealthGlobe}">Collect Health Globes</CheckBox>
                        <CheckBox IsChecked="{Binding Path=Misc.HiPriorityHG}">Give higher priority to globes</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>

            <!--<GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <GroupBox.Header>
                    Movement
                </GroupBox.Header>
                <StackPanel>
                    <CheckBox IsChecked="{Binding Path=Misc.AllowOOCMovement}" ToolTip="leap, charge, teleport, sprint, spirit walk">Use movement spells Out of Combat</CheckBox>
                    --><!--<CheckBox IsChecked="{Binding Path=Misc.FleeInGhostMode}">Flee In Ghost Mode</CheckBox>-->
                    <!--<CheckBox IsChecked="{Binding Path=Misc.AttackWhenBlocked}" ToolTip="Attack Mobs When Blocked">Attack When Blocked</CheckBox>-->

                    <!--<TextBlock Grid.Column="2" Margin="2,10,2,0" Text="Time required for 'blocked' state to trigger" FontWeight="Normal" TextAlignment="Center" />
                    <Slider  Grid.Row="1" Grid.Column="2" Template="{DynamicResource SliderEditable}" ToolTip="Time required for bot to realize that monsters are blocking path, which then enables blocked handling such as 'Attack when blocked' "
                            Interval="100" IsSnapToTickEnabled="True"
                            Maximum="3000" Minimum="250" SmallChange="25" TickFrequency="25" TickPlacement="BottomRight" 
                            Value="{Binding Path=Misc.TimeToBlockMs}" 
                            HorizontalAlignment="Stretch" Margin="0,0,0,0"
                            MinWidth="200"/>--><!--                    
                    
                </StackPanel>
            </GroupBox>-->

            <GroupBox Header="Containers">
                <StackPanel>
                    <Grid Margin="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <!--<UniformGrid Grid.Row="1" Margin="5,0,5,5" Columns="1" HorizontalAlignment="Center">
                        <CheckBox HorizontalAlignment="Center" Margin="2" IsChecked="{Binding Path=WorldObject.HiPriorityContainers}" ToolTip="Will ignore enemies to get to container">Give Higher Priority to Containers</CheckBox>
                    </UniformGrid>-->
                    <UniformGrid Grid.Row="1" Margin="5" Columns="3" HorizontalAlignment="Center">
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.OpenAnyContainer}" ToolTip="Any Container">Open Any Container</CheckBox>
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.InspectCorpses}" ToolTip="Dead Bodies">Inspect Corpses</CheckBox>
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.InspectGroundClicky}" ToolTip="Ground Clicky's, loose stones etc.">Ground Containers</CheckBox>
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.InspectWeaponRacks}" ToolTip="Inspect Weapon Racks">Weapon Racks</CheckBox>
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.OpenChests}" ToolTip="Normal Chests">Open Chests</CheckBox>
                        <CheckBox HorizontalAlignment="Left" Margin="2" IsChecked="{Binding Path=WorldObject.OpenRareChests}" ToolTip="Open Rare Chests">Open Rare Chests</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Shrines and Pylons">
                <StackPanel Margin="0,6,10,0">
                    <WrapPanel Margin="0,0,0,0">
                        <RadioButton Foreground="White" GroupName="WorldObjectShrine" Content="Ignore" IsChecked="{Binding Path=WorldObject.ShrineWeighting, Converter={StaticResource BoolInverterConverter}}" />
                        <RadioButton Foreground="White" GroupName="WorldObjectShrine" Content="Use All Shrines" IsChecked="{Binding Path=WorldObject.UseShrine}" />
                        <RadioButton Foreground="White" GroupName="WorldObjectShrine" Content="Customize" IsChecked="{Binding Path=WorldObject.ShrineWeighting}" />
                    </WrapPanel>
                    <RadioButton Foreground="White" GroupName="BossMode" Margin="0,0,10,0" Content="Accept" IsChecked="{Binding Path=Misc.FollowerBossFightDialogMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=AlwaysAccept}" />

                    <UniformGrid Margin="5,5,0,0" Columns="3" Visibility="{}">
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseEnlightenedShrine}" ToolTip="Enable collection of Enlightened Shrines">Use Enlightened</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseFrenzyShrine}" ToolTip="Enable collection of Frenzy Shrines">Use Frenzy</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseFortuneShrine}" ToolTip="Enable collection of Fortune Shrines">Use Fortune</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseProtectionShrine}" ToolTip="Enable collection of Protection Shrines">Use Protection</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseEmpoweredShrine}" ToolTip="Enable collection of Empowered Shrines">Use Empowered</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseFleetingShrine}" ToolTip="Enable collection of Fleeting Shrines">Use Fleeting</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseChannelingPylon}" ToolTip="Enable collection of Channeling Pylons">Use Channeling</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseConduitPylon}" ToolTip="Enable collection of Conduit Pylons">Use Conduit</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseShieldPylon}" ToolTip="Enable collection of Shield Pylons">Use Shield</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UseSpeedPylon}" ToolTip="Enable collection of Speed Pylons">Use Speed</CheckBox>
                        <CheckBox Margin="2" IsChecked="{Binding Path=WorldObject.UsePowerPylon}" ToolTip="Enable collection of Power Pylons">Use Power</CheckBox>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>




            <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <GroupBox.Header>
                    Paragon Spending
                </GroupBox.Header>
                <StackPanel>

                    <CheckBox Margin="3,10,3,10" IsChecked="{Binding Paragon.IsEnabled}">Spend paragon points</CheckBox>
                    <CheckBox Margin="3,0,3,10" IsChecked="{Binding Paragon.IsCustomize}">Customize priority and limits</CheckBox>

                    <StackPanel Visibility="{Binding Paragon.IsCustomize, Converter={StaticResource VisibleWhenTrueConverter}}">

                        <TextBlock Margin="3,8,3,10" TextWrapping="Wrap">Drag the items below within each group to prioritize how they are spent.</TextBlock>

                        <Label>Core:</Label>
                        <ListBox Grid.Row="1" Grid.Column="0" Padding="5"
                        ItemsSource="{Binding Paragon.CoreParagonPriority}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        SelectedItem="{Binding Paragon.CoreParagonPrioritySelectedItem}"                         
                        SelectionMode="Single"
                        uiComponents:DragDrop.IsDragSource="True"
                        uiComponents:DragDrop.IsDropTarget="True"
                        uiComponents:DragDrop.DragDropContext="Core"
                        uiComponents:DragDrop.DragAdornerTemplate="{DynamicResource DragAdorner}"
                        VerticalAlignment="Top"
                        ItemTemplate="{DynamicResource ParagonListBoxItemTemplate}"
                        ItemContainerStyle="{DynamicResource ParagonListBoxItemStyle}"
                        >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>

                        <Label>Offense:</Label>
                        <ListBox Padding="5"
                        ItemsSource="{Binding Paragon.OffenseParagonPriority}"
                        uiComponents:DragDrop.IsDragSource="True"
                        uiComponents:DragDrop.IsDropTarget="True"
                        uiComponents:DragDrop.DragDropContext="Offense"
                        uiComponents:DragDrop.DragAdornerTemplate="{DynamicResource DragAdorner}"
                        VerticalAlignment="Top"
                        ItemTemplate="{DynamicResource ParagonListBoxItemTemplate}"
                        ItemContainerStyle="{DynamicResource ParagonListBoxItemStyle}"
                        >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>

                        <Label>Defense:</Label>
                        <ListBox Padding="5"
                        ItemsSource="{Binding Paragon.DefenseParagonPriority}"
                        uiComponents:DragDrop.IsDragSource="True"
                        uiComponents:DragDrop.IsDropTarget="True"
                        uiComponents:DragDrop.DragDropContext="Offense"
                        uiComponents:DragDrop.DragAdornerTemplate="{DynamicResource DragAdorner}"
                        VerticalAlignment="Top"
                        ItemTemplate="{DynamicResource ParagonListBoxItemTemplate}"
                        ItemContainerStyle="{DynamicResource ParagonListBoxItemStyle}"
                        >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>

                        <Label>Utility:</Label>
                        <ListBox Padding="5"
                        ItemsSource="{Binding Paragon.UtilityParagonPriority}"
                        uiComponents:DragDrop.IsDragSource="True"
                        uiComponents:DragDrop.IsDropTarget="True"
                        uiComponents:DragDrop.DragDropContext="Offense"
                        uiComponents:DragDrop.DragAdornerTemplate="{DynamicResource DragAdorner}"
                        VerticalAlignment="Top"
                        ItemTemplate="{DynamicResource ParagonListBoxItemTemplate}"
                        ItemContainerStyle="{DynamicResource ParagonListBoxItemStyle}"
                        >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <StackPanel Grid.Row="6" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,0">
                <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <GroupBox.Header>
                        Boss Fights
                    </GroupBox.Header>
                    <StackPanel>
                        <WrapPanel Margin="10,10,10,0">
                            <RadioButton Foreground="White" GroupName="BossMode" Margin="0,0,10,0" Content="Accept" IsChecked="{Binding Path=Misc.FollowerBossFightDialogMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=AlwaysAccept}" />
                            <RadioButton Foreground="White" GroupName="BossMode" Margin="0,0,10,0" Content="Decline" IsChecked="{Binding Path=Misc.FollowerBossFightDialogMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=AlwaysDecline}" />
                            <RadioButton Foreground="White" GroupName="BossMode" Margin="0,0,10,0" Content="Decline while on Bounty" IsChecked="{Binding Path=Misc.FollowerBossFightDialogMode, Converter={StaticResource enumBooleanConverter}, ConverterParameter=DeclineInBounty}" />
                        </WrapPanel>
                        <UniformGrid Columns="2" Margin="10,10,10,0" VerticalAlignment="Top">
                            <CheckBox IsChecked="{Binding Path=Misc.WaitForResInBossEncounters}" ToolTip="Attack Mobs When Blocked">Wait for revive during boss fights</CheckBox>
                        </UniformGrid>                        
                    </StackPanel>
                </GroupBox>
            </StackPanel>





            <!-- Misc -->
            <StackPanel Grid.Row="6" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,0">
                <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <GroupBox.Header>
                        Misc
                    </GroupBox.Header>
                    <StackPanel>
                        <UniformGrid Columns="2" Margin="10,10,10,0">
                            <CheckBox IsChecked="{Binding Path=WorldObject.AllowPlayerResurection}" ToolTip="Clicks Gravestones to resurrect dead players">Resurrect Dead Players</CheckBox>
                        </UniformGrid>
                    </StackPanel>
                </GroupBox>


            </StackPanel>

            <!--Reset Button-->
            <!--<Button Grid.Row="7" Margin="5" HorizontalAlignment="Center" Command="{Binding ResetMiscCommand}">Reset</Button>-->
        </StackPanel>
    </ScrollViewer>
</UserControl>
