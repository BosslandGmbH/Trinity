<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             mc:Ignorable="d" Foreground="{DynamicResource TextBrush}" Background="#434343" Padding="10,0,0,0"
             d:DesignHeight="1002" d:DesignWidth="390">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ut:EnumBooleanConverter x:Key="enumBooleanConverter" />
            <ut:FlagsEnumValueConverter x:Key="flagsEnumValueBooleanConverter"/>
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style TargetType="WrapPanel">
                <Setter Property="Margin" Value="0,2" />
            </Style>
            <Style x:Key="TextBlockCheckBox" TargetType="CheckBox">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer>
        <StackPanel  Margin="0,10,5,0">
            <GroupBox Header="Items to Buy" Height="257">
                <UniformGrid Margin="15,5,15,4">
                    <StackPanel HorizontalAlignment="Left" Width="153" VerticalAlignment="Top" Margin="0,10,0,-37" Height="140">
                        <TextBlock FontWeight="UltraBold" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="13,0,0,0" Text="Weapons" />
                        <StackPanel HorizontalAlignment="Left" Margin="14,5,15,0">
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="OneHandItem" IsChecked="{Binding Gambling.OneHandItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=OneHandItem}" Content="One-Handed" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="TwoHandItem" IsChecked="{Binding Gambling.TwoHandItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=TwoHandItem}" Content="Two-Handed" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Mojo" IsChecked="{Binding Gambling.Mojo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Mojo}" Content="Mojo" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Quiver" IsChecked="{Binding Gambling.Quiver, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Quiver}" Content="Quiver" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Orb" IsChecked="{Binding Gambling.Orb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Orb}" Content="Orb" Margin="0,0,0,0" />
                            </WrapPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Width="138" VerticalAlignment="Top" Margin="14,10,-8,-202" Height="217">
                        <TextBlock FontWeight="UltraBold" HorizontalAlignment="Left" Margin="13,0,0,0" TextWrapping="Wrap" Text="Armor"/>
                        <StackPanel HorizontalAlignment="Left" Margin="14,5,0,0" Width="114">
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Belt" IsChecked="{Binding Gambling.Belt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Belt}" Content="Belt" Margin="0,0,0,0" />
                            </WrapPanel>                            
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Boots" IsChecked="{Binding Gambling.Boots, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Boots}" Content="Boots" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Bracers" IsChecked="{Binding Gambling.Bracers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Bracers}" Content="Bracers" Margin="0,0,0,0" />
                            </WrapPanel>                                                      
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Chest" IsChecked="{Binding Gambling.Chest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Chest}" Content="Chest" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Gloves" IsChecked="{Binding Gambling.Gloves, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Gloves}" Content="Gloves" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Helm" IsChecked="{Binding Gambling.Helm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Helm}" Content="Helm" Margin="0,0,0,0" />
                            </WrapPanel>                            
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Pants" IsChecked="{Binding Gambling.Pants, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Pants}" Content="Pants" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Shield" IsChecked="{Binding Gambling.Shield, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Shield}" Content="Shield" Margin="0,0,0,0" />
                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Shoulders" IsChecked="{Binding Gambling.Shoulders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Shoulders}" Content="Shoulders" Margin="0,0,0,0" />
                            </WrapPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Width="158" VerticalAlignment="Stretch" Margin="0,33,-4,0">
                        <TextBlock FontWeight="UltraBold" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="13,0,0,0" Text="Trinkets" />
                        <StackPanel HorizontalAlignment="Left" Margin="14,5,15,0">
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Amulet" IsChecked="{Binding Gambling.Amulet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center">Amulet</CheckBox>

                            </WrapPanel>
                            <WrapPanel HorizontalAlignment="Left">
                                <CheckBox x:Name="Ring" IsChecked="{Binding Gambling.Ring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Style="{StaticResource TextBlockCheckBox}" IsChecked="{Binding IsChecked, ElementName=Ring}" Content="Ring" Margin="0,0,0,0" />
                            </WrapPanel>
                        </StackPanel>
                    </StackPanel>
                </UniformGrid>
            </GroupBox>
            <GroupBox Header="Advanced" Margin="0,0,0,0" Padding="0,0,0,10" Height="194">
                <StackPanel  Margin="15,15,10,9">
                    <StackPanel Margin="10,0,0,0">
                        <TextBlock Text="Never Spend Shards Below:" FontWeight="Bold" TextAlignment="Center" ToolTip="Bot will not buy items if shard count is below this value"/>
                        <WrapPanel Margin="5,5,0,0" Orientation="Horizontal">
                            <Slider x:Name="MinimumBloodShardsSlider"
        					Interval="25" Maximum="1000" Minimum="25" SmallChange="25" TickFrequency="25" IsSnapToTickEnabled="True" TickPlacement="BottomRight" 
        					Value="{Binding Gambling.MinimumBloodShards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        					HorizontalAlignment="Stretch" Width="243" Style="{x:Null}" />
                            <TextBlock Text="{Binding Value, ElementName=MinimumBloodShardsSlider, StringFormat=\{0:#\}}" Width="39" TextAlignment="Center" ToolTip="Bot will not buy items if shard count is below this value" />
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel Margin="10,10,0,0">
                        <WrapPanel Margin="0,5,0,0" Orientation="Horizontal">
                            <CheckBox x:Name="SaveShardsCheckbox" IsChecked="{Binding Gambling.ShouldSaveShards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Bot will save shards until you have this many, then spend down to minimum"/>
                            <CheckBox Style="{StaticResource TextBlockCheckBox}" FontWeight="Bold" IsChecked="{Binding IsChecked, ElementName=SaveShardsCheckbox}" Content="Save Shards Until:" Margin="0,0,0,0" ToolTip="Bot will save shards until you have this many, then spend down to minimum" />
                        </WrapPanel>
                        <WrapPanel Margin="5,5,0,0" Orientation="Horizontal">
                            <Slider x:Name="SaveShardsSlider"
        					Interval="25" Maximum="1500" Minimum="50" SmallChange="25" TickFrequency="25" IsSnapToTickEnabled="True" TickPlacement="BottomRight" 
        					Value="{Binding Gambling.SaveShardsThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        					HorizontalAlignment="Stretch" Width="243" Style="{x:Null}" />
                            <TextBlock Text="{Binding Value, ElementName=SaveShardsSlider, StringFormat=\{0:#\}}" Width="39" TextAlignment="Center" ToolTip="Bot will save shards until you have this many, then spend down to minimum" />
                        </WrapPanel>
                        <WrapPanel Margin="5,5,0,0" Orientation="Horizontal">
                            <CheckBox x:Name="TownRunCheckbox" IsChecked="{Binding Gambling.ShouldTownRun, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip=""/>
                            <CheckBox Style="{StaticResource TextBlockCheckBox}" FontWeight="Bold" IsChecked="{Binding IsChecked, ElementName=TownRunCheckbox}" Content="Go to town when limit reached" Margin="0,0,0,0" ToolTip="" />
                        </WrapPanel>
                    </StackPanel>
                    <Canvas x:Name="Overlay">
                        <Canvas.Style>
                            <Style TargetType="Canvas">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=SaveShardsCheckbox}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=SaveShardsCheckbox}" Value="False">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Canvas.Style>
                        <Rectangle Canvas.ZIndex="3" Fill="#99333333" Height="54" Stroke="Transparent" Width="293" Canvas.Left="12" Canvas.Top="-45"/>
                    </Canvas>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</UserControl>
