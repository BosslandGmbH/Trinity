<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ut="clr-namespace:Trinity.UIComponents" xmlns:charts="clr-namespace:LineChartLib"
             mc:Ignorable="d" Foreground="{DynamicResource TextBush}" d:DesignHeight="300" d:DesignWidth="1400">
    <UserControl.Resources>
        <ut:DebugDataBindingConverter x:Key="DebugDataBindingConverter" />
        <DataTemplate x:Key="ListViewTextCellTemplate">
            <TextBlock Text="{Binding}" />
        </DataTemplate>
        <Style TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00000000" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#00000000" />
            </Style.Resources>
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding InCache}" Value="">
                    <Setter Property="TextElement.Foreground" Value="Gray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding TrinityType}" Value="Unknown">
                    <Setter Property="TextElement.Foreground" Value="Gray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <ut:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>
    <DockPanel>
        <Grid DockPanel.Dock="Top">
            <WrapPanel>
                <CheckBox Margin="5" IsChecked="{Binding Path=Enabled}">On/Off</CheckBox>
                <CheckBox Margin="5" IsChecked="{Binding Path=IsDefaultVisible}">Show Default Cache</CheckBox>
                <CheckBox Margin="5" IsChecked="{Binding Path=IsLazyCacheVisible}">Show Lazy Cache</CheckBox>
                <CheckBox Margin="5" IsChecked="{Binding Path=IsRadarWindowVisible}">Show Radar Window</CheckBox>
            </WrapPanel>
            <!--<Button DockPanel.Dock="Top" Content="RadarUI" Width="75" Command="{Binding LaunchRadarUICommand}" HorizontalAlignment="Right" Height="22"/>-->
        </Grid>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ut:ColumnDefinitionExtended Visible="{Binding IsDefaultVisible}" Width="*" />
                <ut:ColumnDefinitionExtended Visible="{Binding IsLazyCacheVisible}" Width="5" />
                <ut:ColumnDefinitionExtended Visible="{Binding IsLazyCacheVisible}" Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <!--<RowDefinition Height="Auto" />-->
                <RowDefinition Height="3*" />
                <RowDefinition Height="0" />
                <RowDefinition Height="0" />
            </Grid.RowDefinitions>
            <ListView Grid.Column="0" Grid.RowSpan="3" ItemsSource="{Binding Cache}" SelectionMode="Single">
                <ListView.View>
                    <ut:AutoSizedGridView>
                        <GridViewColumn Header="ACDId" DisplayMemberBinding="{Binding ACDId, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="Distance" DisplayMemberBinding="{Binding Distance, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="Radius" DisplayMemberBinding="{Binding Radius, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <!--<GridViewColumn Width="Auto" Header="RadiusDistance" DisplayMemberBinding="{Binding RadiusDistance, Mode=OneWay}" CellTemplate="{StaticResource listViewTextCellTemplate}" />-->
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Type, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="Weight" DisplayMemberBinding="{Binding Weight, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="InCache" DisplayMemberBinding="{Binding InCache, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="IgnoreReason" DisplayMemberBinding="{Binding IgnoreReason, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="WeightInfo" DisplayMemberBinding="{Binding WeightInfo, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="IsBoss" DisplayMemberBinding="{Binding IsBoss, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="IsElite" DisplayMemberBinding="{Binding IsElite, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="IsQuestMonster" DisplayMemberBinding="{Binding IsQuestMonster, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="IsMinimapActive" DisplayMemberBinding="{Binding IsMinimapActive, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="MarkerHash" DisplayMemberBinding="{Binding MarkerHash, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Header="MinimapTextureSnoId" DisplayMemberBinding="{Binding MinimapTextureSnoId, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <!--<GridViewColumn Width="Auto" Header="RActorGUID" DisplayMemberBinding="{Binding RActorGUID, Mode=OneWay}" CellTemplate="{StaticResource listViewTextCellTemplate}" />-->
                        <!--<GridViewColumn Width="Auto" Header="ActorSNO" DisplayMemberBinding="{Binding ActorSNO, Mode=OneWay}" CellTemplate="{StaticResource listViewTextCellTemplate}" />-->
                    </ut:AutoSizedGridView>
                </ListView.View>
            </ListView>

            <GridSplitter Background="Teal" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch" />

            <ListView Grid.Row="0" Grid.Column="2" ItemsSource="{Binding LazyCache}">
                <ListView.View>
                    <ut:AutoSizedGridView>
                        <GridViewColumn Width="Auto" Header="RActorId" DisplayMemberBinding="{Binding RActorId, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="Auto" Header="ACDId" DisplayMemberBinding="{Binding ACDId, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="Auto" Header="ActorSnoId" DisplayMemberBinding="{Binding ActorSnoId, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="175" Header="InternalName" DisplayMemberBinding="{Binding InternalName, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="Auto" Header="RDistance" DisplayMemberBinding="{Binding RadiusDistance, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="65" Header="Weight" DisplayMemberBinding="{Binding Weight, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="80" Header="TrinityPluginType" DisplayMemberBinding="{Binding TrinityType, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="60" Header="DBType" DisplayMemberBinding="{Binding ActorType, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="Auto" Header="Radius" DisplayMemberBinding="{Binding Radius, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <!--<GridViewColumn Width="Auto" Header="MoveSpeed" DisplayMemberBinding="{Binding MovementSpeed, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />-->
                        <GridViewColumn Width="Auto" Header="WeightTime" DisplayMemberBinding="{Binding WeightTime, Mode=OneWay, StringFormat={}{0:0.##}}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                        <GridViewColumn Width="Auto" Header="WeightReasons" DisplayMemberBinding="{Binding WeightReasons, Mode=OneWay}" CellTemplate="{StaticResource ListViewTextCellTemplate}" />
                    </ut:AutoSizedGridView>
                </ListView.View>
                <ListView.ContextMenu>
                    <!-- Binding of context menu is so annoying -->
                    <ContextMenu>
                        <MenuItem Header="Copy" 
                              Command="{Binding Data.CopyCommand, Source={StaticResource Proxy}}"  
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

            <GridSplitter ResizeDirection="Rows" Background="Teal" Grid.Column="2" Grid.Row="1" Height="0" HorizontalAlignment="Stretch" />
            <!--
            <Border Padding="10,20" Grid.Column="2" Grid.Row="2" Background="#333333">
                <UserControl>
                    <UserControl.Resources>
                        <charts:LineChartGenerator x:Key="UpdateLineGenerator" ItemsSource="{Binding CacheUpdateTime}" 
                                               Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualWidth}" 
                                               Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualHeight}">
                            <charts:LineChartGenerator.HorizontalAxis>
                                <charts:AutoAxis PropertyName="DateTime" />
                            </charts:LineChartGenerator.HorizontalAxis>
                            <charts:LineChartGenerator.VerticalAxis>
                                <charts:AdaptableIncrementAxis PropertyName="Value" MaximumItems="5" IncludeZero="True" IsSymmetricAroundZero="False" Increments="1,2,5" IsFlipped="True" />
                            </charts:LineChartGenerator.VerticalAxis>
                        </charts:LineChartGenerator>
                        <charts:LineChartGenerator x:Key="WeightLineGenerator" ItemsSource="{Binding WeightUpdateTime}" 
                                               Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualWidth}" 
                                               Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualHeight}">
                            <charts:LineChartGenerator.HorizontalAxis>
                                <charts:AutoAxis PropertyName="DateTime" />
                            </charts:LineChartGenerator.HorizontalAxis>
                            <charts:LineChartGenerator.VerticalAxis>
                                <charts:AdaptableIncrementAxis PropertyName="Value" MaximumItems="5" IncludeZero="True" IsSymmetricAroundZero="False" Increments="1,2,5" IsFlipped="True" />
                            </charts:LineChartGenerator.VerticalAxis>
                        </charts:LineChartGenerator>
                    </UserControl.Resources>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1" Background="#333333" Style="{x:Null}" Width="{Binding Source={StaticResource UpdateLineGenerator}, Path=Width}" Height="{Binding Source={StaticResource UpdateLineGenerator}, Path=Height}">                 
                            <Polyline StrokeLineJoin="Round" StrokeMiterLimit="0.5" StrokeThickness="2" Points="{Binding Source={StaticResource UpdateLineGenerator}, Path=Points}" Stroke="DarkOrange" />
                            <ItemsControl Background="Transparent" Style="{x:Null}" ItemsSource="{Binding Source={StaticResource UpdateLineGenerator}, Path=ItemPoints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid Background="Transparent" Style="{x:Null}" IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Fill="Orange">
                                            <Path.Data>
                                                <EllipseGeometry Center="{Binding Point}" RadiusX="2" RadiusY="2" />
                                            </Path.Data>
                                        </Path>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>             
                            <Polyline StrokeLineJoin="Round" StrokeMiterLimit="0.5" StrokeThickness="2" Points="{Binding Source={StaticResource WeightLineGenerator}, Path=Points}" Stroke="DodgerBlue" />                
                            <ItemsControl Background="Transparent" Style="{x:Null}" ItemsSource="{Binding Source={StaticResource WeightLineGenerator}, Path=ItemPoints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid Background="Transparent" Style="{x:Null}" IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Fill="DeepSkyBlue">
                                            <Path.Data>
                                                <EllipseGeometry Center="{Binding Point}" RadiusX="2" RadiusY="2" />
                                            </Path.Data>
                                        </Path>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="Cache Update (ms)" HorizontalAlignment="Left" TextAlignment="Center" Foreground="Orange" FontSize="12" Margin="10,-9,4,4" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="Weighting (ms)" TextAlignment="Right" Foreground="DodgerBlue" FontSize="12" Margin="4,-9,10,4" /> 
                        <ItemsControl Grid.Row="1" Grid.Column="0" Background="Transparent" Style="{x:Null}" ItemsSource="{Binding Source={StaticResource UpdateLineGenerator}, Path=VerticalAxis.AxisItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid Background="#333333" Style="{x:Null}" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Background="Transparent" Style="{x:Null}" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Background="Transparent" Style="{x:Null}" Padding="0,0,8,0" Foreground="DarkOrange" Text="{Binding Item, StringFormat=' {0:N1}'}" RenderTransform="1 0 0 1 0 -8" />                                 

                                        <StackPanel.RenderTransform>
                                            <TranslateTransform Y="{Binding Offset}" />
                                        </StackPanel.RenderTransform>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>              
                        <ItemsControl Grid.Row="1" Grid.Column="2" Background="Transparent" Style="{x:Null}" ItemsSource="{Binding Source={StaticResource WeightLineGenerator}, Path=VerticalAxis.AxisItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid Background="#333333" Style="{x:Null}" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Background="Transparent" Style="{x:Null}" Orientation="Horizontal" HorizontalAlignment="Left">
                                        <TextBlock Background="Transparent" Style="{x:Null}" Foreground="DodgerBlue" Text="{Binding Item, StringFormat=' {0:N1}'}" RenderTransform="1 0 0 1 0 -8" Padding="8,0,0,0" />
                                         <StackPanel.RenderTransform>
                                            <TranslateTransform Y="{Binding Offset}" />
                                        </StackPanel.RenderTransform>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </UserControl>

            </Border>
-->
        </Grid>
    </DockPanel>
</UserControl>